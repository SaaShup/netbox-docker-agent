[
    {
        "id": "216db6efc0df9bc0",
        "type": "tab",
        "label": "INIT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a827fd671d6a227e",
        "type": "tab",
        "label": "API - GET",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ea1a4b04d852f38",
        "type": "tab",
        "label": "API - POST",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8e85e8c54d776ddc",
        "type": "tab",
        "label": "API - PUT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "177047e3d7a351be",
        "type": "tab",
        "label": "API - DELETE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1d08205d001d337b",
        "type": "tab",
        "label": "API - EXTRAS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ee57a9d7dc5fae7",
        "type": "tab",
        "label": "METRICS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0455d311f0e53c09",
        "type": "subflow",
        "name": "JOURNAL",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 220,
                "wires": [
                    {
                        "id": "6edbcda2ae25e3e9"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6a7a0467075486e3",
        "type": "change",
        "z": "0455d311f0e53c09",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/extras/journal-entries/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "journal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 220,
        "wires": [
            [
                "3547e249e2f4244a"
            ]
        ]
    },
    {
        "id": "3547e249e2f4244a",
        "type": "http request",
        "z": "0455d311f0e53c09",
        "name": "Create entry",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 910,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "6edbcda2ae25e3e9",
        "type": "switch",
        "z": "0455d311f0e53c09",
        "name": "has netbox url ?",
        "property": "config.netbox_url",
        "propertyType": "global",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 220,
        "wires": [
            [
                "6a7a0467075486e3"
            ]
        ]
    },
    {
        "id": "d7a287982b6bd303",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Save config",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "3f489e8a5d253765",
                "59fbfa36f8ac2c8b"
            ]
        ]
    },
    {
        "id": "82a20fd37e28308d",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.flows",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "config",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "deb89a9f64f32d7e",
        "type": "file",
        "z": "216db6efc0df9bc0",
        "name": "settings",
        "filename": "($env(\"DATAPATH\") ?  $env(\"DATAPATH\") : \"/data\") & \"/settings.js\"",
        "filenameType": "env",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 520,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "6cdb21940f0b28b7",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Update",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "55c03f8643b324ae"
            ]
        ]
    },
    {
        "id": "55c03f8643b324ae",
        "type": "template",
        "z": "216db6efc0df9bc0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "data = require(\"./package.json\")\n\nmodule.exports = {\n    credentialSecret: \"saashup\",\n    flowFile: \"flows.json\",\n    flowFilePretty: true,\n    adminAuth: {\n        type: \"credentials\",\n        users: [{\n            username: process.env.ADMIN_USERNAME || \"admin\",\n            password: process.env.ADMIN_PASSWORD || \"$2a$08$s.NFdSn4Gm4d7gHErya//e6O8RO1/3f7TZ7zflXJ9jfFV0cI6jGwK\",\n            permissions: \"*\"\n        }]\n    },\n    /*https: {\n      key: require(\"fs\").readFileSync('/data/privkey.pem'),\n      cert: require(\"fs\").readFileSync('/data/cert.pem')\n    },\n    requireHttps: true,*/\n    httpNodeAuth: {\n        user: process.env.API_USERNAME || \"admin\",\n        pass: process.env.API_PASSWORD || \"$2a$08$s.NFdSn4Gm4d7gHErya//e6O8RO1/3f7TZ7zflXJ9jfFV0cI6jGwK\"\n    },\n    uiPort: process.env.PORT || 1880,\n    disableEditor: 'ENABLE_EDITOR' in process.env ? false : true,\n    httpStatic: [\n        { path: '/usr/src/node-red/public', root: '/' },\n        { path: '/usr/src/node-red/public/doc.html', root: '/doc' },\n        { path: '/usr/src/node-red/public/openapi.yml', root: '/openapi' }\n    ],\n    httpAdminRoot: '/nodered',\n    diagnostics: {\n        enabled: true,\n        ui: true,\n    },\n    runtimeState: {\n        enabled: false,\n        ui: false,\n    },\n    logging: {\n        console: {\n            level: \"info\",\n            metrics: false,\n            audit: false,\n            handler: function(settings) {\n                return function(msg) {\n                    const level = {\n                        20: 'error',\n                        30: 'warn',\n                        40: 'info'\n                    };\n                    const lvl = \"level\" in msg ? msg.level : \"40\";\n\n                    delete msg.type;\n                    delete msg.z;\n                    delete msg.path;\n                    delete msg.name;\n                    delete msg.id;\n\n                    let line = `${data.name} level=${level[lvl]} version=${data.version}`;\n\n                    if (typeof msg.msg === 'object') {\n                        for (const key of Object.keys(msg.msg)) {\n                            line += ` ${key}=${JSON.stringify(msg.msg[key])}`;\n                        }\n                    } else {\n                        line += ` msg=` + JSON.stringify(msg.msg);\n                    }\n\n                    if (lvl <= 20) {\n                        return console.error(line);\n                    }\n\n                    return console.log(line);\n                }\n            }\n        }\n    },\n    exportGlobalContextKeys: false,\n    externalModules: {\n    },\n    editorTheme: {\n        tours: false,\n        palette: {\n        },\n        projects: {\n            enabled: false,\n            workflow: {\n                mode: \"manual\"\n            }\n        },\n        codeEditor: {\n            lib: \"monaco\",\n            options: {\n            }\n        },\n        markdownEditor: {\n            mermaid: {\n                enabled: true\n            }\n        },\n    },\n    functionExternalModules: true,\n    functionTimeout: 0,\n    functionGlobalContext: {\n    },\n    debugMaxLength: 1000,\n    mqttReconnectTime: 15000,\n    serialReconnectTime: 15000\n}\n",
        "output": "str",
        "x": 340,
        "y": 820,
        "wires": [
            [
                "deb89a9f64f32d7e"
            ]
        ]
    },
    {
        "id": "b3814c680815a25b",
        "type": "exec",
        "z": "216db6efc0df9bc0",
        "command": "curl --no-buffer --unix-socket /var/run/docker.sock http://localhost/events",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Events",
        "x": 350,
        "y": 920,
        "wires": [
            [
                "7c210c45ea82059e"
            ],
            [],
            []
        ]
    },
    {
        "id": "681c7db4b492c74e",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Events",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 920,
        "wires": [
            [
                "b3814c680815a25b"
            ]
        ]
    },
    {
        "id": "06b0b14f4b337cfe",
        "type": "switch",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 900,
        "wires": [
            [
                "8e555efa2728d8b8"
            ]
        ]
    },
    {
        "id": "7c210c45ea82059e",
        "type": "split",
        "z": "216db6efc0df9bc0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 510,
        "y": 900,
        "wires": [
            [
                "06b0b14f4b337cfe"
            ]
        ]
    },
    {
        "id": "da696e53c1c7431f",
        "type": "switch",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "exec_create: /bin/sh -c node /healthcheck.js",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "exec_start: /bin/sh -c node /healthcheck.js",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "exec_die",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 970,
        "y": 900,
        "wires": [
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "8e555efa2728d8b8",
        "type": "json",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 900,
        "wires": [
            [
                "da696e53c1c7431f"
            ]
        ]
    },
    {
        "id": "3f489e8a5d253765",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "($env(\"DATAPATH\") ?  $env(\"DATAPATH\") : \"/data\") & \"/config.js\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 700,
        "wires": [
            [
                "d216b6ee68a71932"
            ]
        ]
    },
    {
        "id": "d216b6ee68a71932",
        "type": "file",
        "z": "216db6efc0df9bc0",
        "name": "config",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 580,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "5693719743b16e0d",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Set config start",
        "props": [
            {
                "p": "filename",
                "v": "($env(\"DATAPATH\") ?  $env(\"DATAPATH\") : \"/data\") & \"/config.js\"",
                "vt": "jsonata"
            },
            {
                "p": "registries_path",
                "v": "($env(\"DATAPATH\") ?  $env(\"DATAPATH\") : \"/data\") & \"/registries.js\"",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "4f7dddf957ee0796"
            ]
        ]
    },
    {
        "id": "4f7dddf957ee0796",
        "type": "file in",
        "z": "216db6efc0df9bc0",
        "name": "config",
        "filename": "filename",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "b4754f87e535ecc9"
            ]
        ]
    },
    {
        "id": "b4754f87e535ecc9",
        "type": "json",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "82a20fd37e28308d",
                "e963d43832071ad1"
            ]
        ]
    },
    {
        "id": "b0765338f9440bd2",
        "type": "link in",
        "z": "216db6efc0df9bc0",
        "name": "reset config",
        "links": [
            "53c71fbaf754a819"
        ],
        "x": 505,
        "y": 40,
        "wires": [
            [
                "82a20fd37e28308d"
            ]
        ]
    },
    {
        "id": "2b9a4a79e583d72a",
        "type": "file in",
        "z": "216db6efc0df9bc0",
        "name": "package",
        "filename": "./package.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 360,
        "y": 440,
        "wires": [
            [
                "47acfb0f70efb0b1"
            ]
        ]
    },
    {
        "id": "47acfb0f70efb0b1",
        "type": "json",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 510,
        "y": 440,
        "wires": [
            [
                "8238525b0e482b59"
            ]
        ]
    },
    {
        "id": "8238525b0e482b59",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "package",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "d155ebf84384e38c",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Set package start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "2b9a4a79e583d72a",
                "964f77c37875401b"
            ]
        ]
    },
    {
        "id": "7994bdaf840414b4",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Set Restart",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "b96bd464463004a6"
            ]
        ]
    },
    {
        "id": "5583ea959d42c0a6",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.host\",\t   \"assigned_object_id\": $globalContext(\"config\").id,\t   \"kind\": \"info\",\t   \"comments\": $string(\"agent restarted\")\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 620,
        "wires": [
            [
                "af0f2ce79605a0a7"
            ]
        ]
    },
    {
        "id": "af0f2ce79605a0a7",
        "type": "subflow:0455d311f0e53c09",
        "z": "216db6efc0df9bc0",
        "name": "",
        "x": 560,
        "y": 620,
        "wires": []
    },
    {
        "id": "9d463861f76ab37d",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & '/api/plugins/docker/hosts/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t   \"id\": $number($globalContext(\"config\").id ? $globalContext(\"config\").id : 0),\t   \"agent_version\": $globalContext(\"package\").version & \"-\" & $globalContext(\"config\").flows,\t   \"operation\": \"refresh\"\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 560,
        "wires": [
            [
                "63761b3c0cd6b725"
            ]
        ]
    },
    {
        "id": "63761b3c0cd6b725",
        "type": "http request",
        "z": "216db6efc0df9bc0",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1360,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b96bd464463004a6",
        "type": "switch",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "config.netbox_url",
        "propertyType": "global",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 340,
        "y": 560,
        "wires": [
            [
                "53727c59b9fece10",
                "5583ea959d42c0a6"
            ]
        ]
    },
    {
        "id": "53727c59b9fece10",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & '/api/plugins/docker/hosts/' & $globalContext(\"config\").id & '/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "rejectUnauthorized",
                "pt": "msg",
                "to": "$env(\"DISABLE_SSL_CHECK\") ? false : true",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "9c7b8352b86756cb"
            ]
        ]
    },
    {
        "id": "9c7b8352b86756cb",
        "type": "http request",
        "z": "216db6efc0df9bc0",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 760,
        "y": 560,
        "wires": [
            [
                "975ed88ff7efae09"
            ]
        ]
    },
    {
        "id": "975ed88ff7efae09",
        "type": "switch",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "msg.payload.agent_version != ($globalContext(\"package\").version & \"-\" & $globalContext(\"config\").flows)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 940,
        "y": 560,
        "wires": [
            [
                "9d463861f76ab37d"
            ]
        ]
    },
    {
        "id": "2fd1cfc270927e8d",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & \"/api/plugins/docker/registries/?host_id=\" & $globalContext(\"config\").id",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t   \"Accept\": \"application/json\"\t\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "rejectUnauthorized",
                "pt": "msg",
                "to": "$env(\"DISABLE_SSL_CHECK\") ? false : true",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 300,
        "wires": [
            [
                "7a03ca99dfebe08f"
            ]
        ]
    },
    {
        "id": "7a03ca99dfebe08f",
        "type": "http request",
        "z": "216db6efc0df9bc0",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 300,
        "wires": [
            [
                "af2aeed6d2f70ef5"
            ]
        ]
    },
    {
        "id": "af2aeed6d2f70ef5",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "registries",
                "pt": "global",
                "to": "[$filter(msg.payload.results.{\t    \"id\": id,\t    \"name\": name,\t    \"serveraddress\": serveraddress,\t    \"images\": [images.display]\t}, function($v) { $v.images != [] })]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9e00089e9a1d8c44",
        "type": "file",
        "z": "216db6efc0df9bc0",
        "name": "",
        "filename": "registry_index_path",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 2160,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "e963d43832071ad1",
        "type": "switch",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload.netbox_url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 220,
        "wires": [
            [
                "fca48a2bcfc6a54d"
            ],
            [
                "c2f5832a62407c4d"
            ]
        ]
    },
    {
        "id": "c2f5832a62407c4d",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "registries",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "fca48a2bcfc6a54d",
        "type": "file in",
        "z": "216db6efc0df9bc0",
        "name": "registry index",
        "filename": "registries_path",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 340,
        "y": 220,
        "wires": [
            [
                "d3e80efd0d97aa1a"
            ]
        ]
    },
    {
        "id": "d3e80efd0d97aa1a",
        "type": "json",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 510,
        "y": 220,
        "wires": [
            [
                "4d52e226b80715df"
            ]
        ]
    },
    {
        "id": "4d52e226b80715df",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "registries",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "e383062c735738ca",
        "type": "link in",
        "z": "216db6efc0df9bc0",
        "name": "link in 2",
        "links": [
            "e32a8db0e7ec4006"
        ],
        "x": 585,
        "y": 160,
        "wires": [
            [
                "4d52e226b80715df"
            ]
        ]
    },
    {
        "id": "5481fb62c41c569d",
        "type": "catch",
        "z": "216db6efc0df9bc0",
        "name": "",
        "scope": [
            "fca48a2bcfc6a54d"
        ],
        "uncaught": false,
        "x": 550,
        "y": 300,
        "wires": [
            [
                "2fd1cfc270927e8d"
            ]
        ]
    },
    {
        "id": "59fbfa36f8ac2c8b",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "registries",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "($env(\"DATAPATH\") ?  $env(\"DATAPATH\") : \"/data\") & \"/registries.js\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 760,
        "wires": [
            [
                "8d225e4335f4ab51"
            ]
        ]
    },
    {
        "id": "8d225e4335f4ab51",
        "type": "file",
        "z": "216db6efc0df9bc0",
        "name": "registries",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 590,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "964f77c37875401b",
        "type": "exec",
        "z": "216db6efc0df9bc0",
        "command": "curl -X GET --unix-socket /var/run/docker.sock http://localhost/info",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: get api info",
        "x": 430,
        "y": 500,
        "wires": [
            [
                "5d8c9841f540054a"
            ],
            [],
            []
        ]
    },
    {
        "id": "5d8c9841f540054a",
        "type": "json",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 500,
        "wires": [
            [
                "e8808ecee2ee7aba"
            ]
        ]
    },
    {
        "id": "e8808ecee2ee7aba",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dockerinfo",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "91e25dba31c28805",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/engine/:type",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 460,
        "wires": [
            [
                "53aaf7026e5a7cee",
                "ae9074b49ecc1248"
            ]
        ]
    },
    {
        "id": "4f41f373f7947d21",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "route by :type",
        "property": "req.params.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "containers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "volumes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "networks",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "images",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "registries",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "endpoint",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 800,
        "y": 500,
        "wires": [
            [
                "4de06d76878cdbd0"
            ],
            [
                "3c46077f2f10a641"
            ],
            [
                "2efc622d38ebd4aa"
            ],
            [
                "840619e239d214aa"
            ],
            [],
            [
                "840619e239d214aa",
                "2efc622d38ebd4aa",
                "3c46077f2f10a641",
                "4de06d76878cdbd0",
                "70c57a4688add144",
                "7a4d9d8b863a0612"
            ]
        ]
    },
    {
        "id": "df268a4a9955ef48",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -s -X GET --unix-socket /var/run/docker.sock http://localhost/containers/json?all=1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: list containers",
        "x": 1300,
        "y": 220,
        "wires": [
            [
                "221cb4f11aa9b1dc"
            ],
            [],
            []
        ]
    },
    {
        "id": "3c46077f2f10a641",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock http://localhost/volumes",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: list volumes",
        "x": 1290,
        "y": 340,
        "wires": [
            [
                "1a50c26c9c0a0708"
            ],
            [],
            []
        ]
    },
    {
        "id": "2efc622d38ebd4aa",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock http://localhost/networks",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: list networks",
        "x": 1290,
        "y": 460,
        "wires": [
            [
                "13f3463f42580ff9"
            ],
            [],
            []
        ]
    },
    {
        "id": "840619e239d214aa",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock http://localhost/images/json?digests=true",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: list images",
        "x": 1290,
        "y": 580,
        "wires": [
            [
                "bf87cac23b3411d9"
            ],
            [],
            []
        ]
    },
    {
        "id": "53aaf7026e5a7cee",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 320,
        "y": 420,
        "wires": []
    },
    {
        "id": "521aa77a01fcea45",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "configure netbox credentials",
        "rules": [
            {
                "t": "set",
                "p": "config.netbox_url",
                "pt": "global",
                "to": "$boolean($env('NETBOX_URL')) ? $env('NETBOX_URL') : req.query.url",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "config.id",
                "pt": "global",
                "to": "req.query.id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "config.netbox_token",
                "pt": "global",
                "to": "req.query.token",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "config.endpoint",
                "pt": "global",
                "to": "req.query.endpoint",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 420,
        "wires": [
            [
                "4f41f373f7947d21"
            ]
        ]
    },
    {
        "id": "d1b84cfbb90de451",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/networks/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"host\": msg.config.id,\t   \"name\": msg.result.Name,\t   \"driver\": $string(msg.result.Driver) = \"null\" ? \"None\" : msg.result.Driver,\t   \"NetworkID\": msg.result.Id,\t   \"state\": \"created\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2030,
        "y": 480,
        "wires": [
            [
                "d262d362c08337f4"
            ]
        ]
    },
    {
        "id": "d262d362c08337f4",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "netbox request: create networks",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2290,
        "y": 480,
        "wires": [
            [
                "eac6a267ba1d8eaf"
            ]
        ]
    },
    {
        "id": "13f3463f42580ff9",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1490,
        "y": 460,
        "wires": [
            [
                "6ebef0d1eb0f7066"
            ]
        ]
    },
    {
        "id": "ae206511b514eff9",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1850,
        "y": 480,
        "wires": [
            [
                "d1b84cfbb90de451"
            ]
        ]
    },
    {
        "id": "d0800a089eab13c2",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/volumes/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"host\": msg.config.id,\t   \"name\": msg.result.Name,\t   \"driver\": msg.result.Driver\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2230,
        "y": 360,
        "wires": [
            [
                "7d51fb2a4a8ebca5"
            ]
        ]
    },
    {
        "id": "7d51fb2a4a8ebca5",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "netbox request: create volumes",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2490,
        "y": 360,
        "wires": [
            [
                "2b11dfa028894e68"
            ]
        ]
    },
    {
        "id": "1a50c26c9c0a0708",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1490,
        "y": 340,
        "wires": [
            [
                "ff1efcf6edbac8aa"
            ]
        ]
    },
    {
        "id": "e26b6e9ed2eaee27",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 2050,
        "y": 360,
        "wires": [
            [
                "d0800a089eab13c2"
            ]
        ]
    },
    {
        "id": "81887b8b8a629144",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "get volumes data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Volumes",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 360,
        "wires": [
            [
                "e26b6e9ed2eaee27"
            ]
        ]
    },
    {
        "id": "eead888045896e1a",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 2050,
        "y": 180,
        "wires": [
            [
                "03079290b974e3ec"
            ]
        ]
    },
    {
        "id": "4de06d76878cdbd0",
        "type": "delay",
        "z": "a827fd671d6a227e",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1040,
        "y": 220,
        "wires": [
            [
                "df268a4a9955ef48"
            ]
        ]
    },
    {
        "id": "f4ca91fa82b0cf42",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/containers/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"host\": msg.config.id,\t    \"name\": $replace(msg.result.Name,\"/\",\"\"),\t    \"hostname\": msg.result.Config.Hostname,\t    \"status\": msg.result.State.Status = \"running\"\t        ? \"running \" & $ceil(($toMillis($now()) - $toMillis(msg.result.State.StartedAt)) / 1000 / 60 / 60 / 24) & \"d\"\t        : \"na\",\t    \"state\": msg.result.State.Status,\t    \"operation\": \"none\",\t    \"restart_policy\": msg.result.HostConfig.RestartPolicy.Name = \"\" ? \"no\" : msg.result.HostConfig.RestartPolicy.Name,\t    \"image\": {\t        \"host\": msg.config.id,\t        \"ImageID\": msg.result.Image\t    },\t    \"ContainerID\": msg.result.Id,\t    \"cap_add\": msg.result.HostConfig.CapAdd,\t    \"cap_drop\": msg.result.HostConfig.CapDrop,\t    \"extra_hosts\": msg.result.HostConfig.ExtraHosts,\t    \"pid_mode\": msg.result.HostConfig.PidMode,\t    \"network_settings\": [\t        $each(\t            msg.result.NetworkSettings.Networks,\t            function($v, $k) {\t                { \"network\": { \"host\": msg.config.id, \"name\": $k } }\t            }\t        )\t    ],\t    \"ports\": msg.result.NetworkSettings.Ports\t        ? [\t            $each(\t                msg.result.NetworkSettings.Ports,\t                function($v, $k) {\t                    {\t                        \"public_port\": $v[0] = null ? 0 : $v[0].HostPort,\t                        \"private_port\": $split($k,\"/\")[0],\t                        \"type\": $split($k,\"/\")[1]\t                    }\t                }\t            )\t          ]\t        : [\t            $each(\t                msg.result.Config.ExposedPorts,\t                function($v, $k) {\t                    $not($exists($lookup($v,'IP'))) or $lookup($v,'IP') = \"0.0.0.0\"\t                        ? {\t                            \"public_port\": $v.PublicPort ? $v.PublicPort : \"0\",\t                            \"private_port\": $split($k,\"/\")[0],\t                            \"type\": $split($k,\"/\")[1]\t                        }\t                }\t            )\t          ],\t    \"env\": [\t        $map(\t            msg.result.Config.Env,\t            function($v, $k) {\t                {\t                    \"var_name\": $substringBefore($v, \"=\"),\t                    \"value\": $substringAfter($v, \"=\")\t                }\t            }\t        )\t    ],\t    \"labels\": [\t        $each(\t            msg.result.Config.Labels,\t            function($v, $k) {\t                { \"key\": $k, \"value\": $v }\t            }\t        )\t    ],\t    \"devices\": msg.result.HostConfig.Devices\t        ? [\t        $map(\t            msg.result.HostConfig.Devices,\t            function($v, $k) {\t               {\t                    \"container_path\": $v.PathInContainer,\t                    \"host_path\": $v.PathOnHost\t                }\t            }\t        )\t    ],\t    \"mounts\": [\t        $map(\t            msg.result.Mounts,\t            function($v, $k) {\t                $v.Type = \"volume\"\t                    ? {\t                        \"source\": $v.Destination,\t                        \"volume\": { \"name\": $v.Name, \"host\": msg.config.id },\t                        \"read_only\": $not($v.RW)\t                    }\t            }\t        )\t    ],\t    \"binds\": [\t        $map(\t            msg.result.Mounts,\t            function($v, $k) {\t                $v.Type = \"bind\"\t                    ? {\t                        \"host_path\": $v.Source,\t                        \"container_path\": $v.Destination,\t                        \"read_only\": $not($v.RW)\t                    }\t            }\t        )\t    ]\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2950,
        "y": 260,
        "wires": [
            [
                "a02aa01b4760459f"
            ]
        ]
    },
    {
        "id": "a02aa01b4760459f",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "netbox request: create containers",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3220,
        "y": 260,
        "wires": [
            [
                "85576a332e06d405"
            ]
        ]
    },
    {
        "id": "417ae7536ebebf6e",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: inspect containers",
        "x": 2310,
        "y": 240,
        "wires": [
            [
                "42827c9888e44fd1"
            ],
            [],
            []
        ]
    },
    {
        "id": "03079290b974e3ec",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "prepare docker api request",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.result.Id) & \"/json -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 240,
        "wires": [
            [
                "417ae7536ebebf6e"
            ]
        ]
    },
    {
        "id": "42827c9888e44fd1",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2530,
        "y": 240,
        "wires": [
            [
                "a407f99fbc5717c1"
            ]
        ]
    },
    {
        "id": "7a4d9d8b863a0612",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock http://localhost/version",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: get api version",
        "x": 1320,
        "y": 1100,
        "wires": [
            [
                "cdf0ca856701cd23"
            ],
            [],
            [
                "c9f9930a51ca8c8f"
            ]
        ]
    },
    {
        "id": "736fb3433484e657",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/containers",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1250,
        "y": 160,
        "wires": [
            [
                "df268a4a9955ef48"
            ]
        ]
    },
    {
        "id": "a23553e203eafd05",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2990,
        "y": 140,
        "wires": []
    },
    {
        "id": "a407f99fbc5717c1",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "was netbox webhook?",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/api/containers",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2700,
        "y": 240,
        "wires": [
            [
                "deec1424f8eaa469"
            ],
            [
                "f4ca91fa82b0cf42"
            ]
        ]
    },
    {
        "id": "deec1424f8eaa469",
        "type": "join",
        "z": "a827fd671d6a227e",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2890,
        "y": 220,
        "wires": [
            [
                "a23553e203eafd05"
            ]
        ]
    },
    {
        "id": "fd0a547f9fcd6516",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/info",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1240,
        "y": 1040,
        "wires": [
            [
                "ed796f5589c864f7"
            ]
        ]
    },
    {
        "id": "7581057e6d016ca9",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2030,
        "y": 1120,
        "wires": []
    },
    {
        "id": "ed796f5589c864f7",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "output",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "package",
                "pt": "msg",
                "to": "package",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "output",
                "pt": "msg",
                "to": "{\t    \"message\":\"netbox-saashup-agent\",\t    \"configured\": msg.config.netbox_token and msg.config.netbox_token != \"\" ? \"ok\" : \"nok\",\t    \"version\": msg.package.version,\t    \"flows\": msg.config.flows\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 1040,
        "wires": [
            [
                "7a4d9d8b863a0612"
            ]
        ]
    },
    {
        "id": "4acdf31cd717543f",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "is type \"endpoint\"?",
        "property": "req.params.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "endpoint",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 500,
        "wires": [
            [
                "521aa77a01fcea45"
            ],
            [
                "4f41f373f7947d21"
            ]
        ]
    },
    {
        "id": "7cd37714a247d0f3",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "netbox request: update host",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1560,
        "y": 940,
        "wires": [
            [
                "0f90d4602b562160"
            ]
        ]
    },
    {
        "id": "70c57a4688add144",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/hosts/' & msg.config.id & \"/\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"id\": msg.config.id,\t   \"endpoint\": msg.config.endpoint,\t   \"state\": \"running\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 940,
        "wires": [
            [
                "7cd37714a247d0f3"
            ]
        ]
    },
    {
        "id": "e843e090678a61b9",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "403",
        "headers": {},
        "x": 1920,
        "y": 80,
        "wires": []
    },
    {
        "id": "221cb4f11aa9b1dc",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "was empty?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 220,
        "wires": [
            [
                "9ada2017c825de2d"
            ],
            [
                "4b4af488cdc44caf"
            ]
        ]
    },
    {
        "id": "4b4af488cdc44caf",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1710,
        "y": 240,
        "wires": [
            [
                "cb7c6330c521e939"
            ]
        ]
    },
    {
        "id": "1649d9a702989caf",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/images",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1240,
        "y": 520,
        "wires": [
            [
                "840619e239d214aa"
            ]
        ]
    },
    {
        "id": "0900cd90c6af5e59",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "was netbox webhook?",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/api/images",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1650,
        "y": 580,
        "wires": [
            [
                "39acafa9d2f2d6ba"
            ],
            [
                "74eb127a6ad3fbdd"
            ]
        ]
    },
    {
        "id": "39acafa9d2f2d6ba",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1830,
        "y": 540,
        "wires": []
    },
    {
        "id": "bf87cac23b3411d9",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1490,
        "y": 580,
        "wires": [
            [
                "0900cd90c6af5e59"
            ]
        ]
    },
    {
        "id": "b281d91de2634af5",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/networks",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1250,
        "y": 400,
        "wires": [
            [
                "2efc622d38ebd4aa"
            ]
        ]
    },
    {
        "id": "6ebef0d1eb0f7066",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "was netbox webhook?",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/api/networks",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1660,
        "y": 460,
        "wires": [
            [
                "d79aa8c42bc038ae"
            ],
            [
                "ae206511b514eff9"
            ]
        ]
    },
    {
        "id": "d79aa8c42bc038ae",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1850,
        "y": 440,
        "wires": []
    },
    {
        "id": "e4c31d1d3fae99f0",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/volumes",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1240,
        "y": 280,
        "wires": [
            [
                "3c46077f2f10a641"
            ]
        ]
    },
    {
        "id": "ff1efcf6edbac8aa",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "was netbox webhook?",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/api/volumes",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1660,
        "y": 340,
        "wires": [
            [
                "8c85e65c2bfecef8"
            ],
            [
                "81887b8b8a629144"
            ]
        ]
    },
    {
        "id": "8c85e65c2bfecef8",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1850,
        "y": 320,
        "wires": []
    },
    {
        "id": "cdf0ca856701cd23",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1530,
        "y": 1080,
        "wires": [
            [
                "f415bfcc211c0729"
            ]
        ]
    },
    {
        "id": "9c13c13d42f82b69",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "output",
        "rules": [
            {
                "t": "set",
                "p": "output.docker",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "output.dockerInfo",
                "pt": "msg",
                "to": "dockerinfo",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 1100,
        "wires": [
            [
                "7581057e6d016ca9"
            ]
        ]
    },
    {
        "id": "f415bfcc211c0729",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "was netbox webhook?",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/api/engine/endpoint",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/info",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1700,
        "y": 1080,
        "wires": [
            [
                "5a07511ed7c011d2"
            ],
            [
                "9c13c13d42f82b69"
            ]
        ]
    },
    {
        "id": "85576a332e06d405",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 3395,
        "y": 260,
        "wires": []
    },
    {
        "id": "2b11dfa028894e68",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 2655,
        "y": 360,
        "wires": []
    },
    {
        "id": "eac6a267ba1d8eaf",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 2455,
        "y": 480,
        "wires": []
    },
    {
        "id": "0f90d4602b562160",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1715,
        "y": 940,
        "wires": []
    },
    {
        "id": "5a07511ed7c011d2",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "package",
                "pt": "msg",
                "to": "package",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/hosts/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t   \"id\": $number(msg.config.id ? msg.config.id : 0),\t   \"docker_api_version\": msg.result.ApiVersion,\t   \"agent_version\": msg.package.version & \"-\" & msg.config.flows,\t   \"state\": \"running\",\t   \"operation\": \"none\"\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 1060,
        "wires": [
            [
                "debd21ad874ab51b"
            ]
        ]
    },
    {
        "id": "debd21ad874ab51b",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "netbox request: update host",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2200,
        "y": 1060,
        "wires": [
            [
                "466a424beeab3020"
            ]
        ]
    },
    {
        "id": "466a424beeab3020",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 2355,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c9f9930a51ca8c8f",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "failed to connect to host?",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "7",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1590,
        "y": 1140,
        "wires": [
            [
                "d3292e92a3507d2c"
            ]
        ]
    },
    {
        "id": "d3292e92a3507d2c",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "output",
        "rules": [
            {
                "t": "set",
                "p": "output.docker",
                "pt": "msg",
                "to": "error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.configured",
                "pt": "msg",
                "to": "socket error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1890,
        "y": 1140,
        "wires": [
            [
                "7581057e6d016ca9"
            ]
        ]
    },
    {
        "id": "fdf2a9c83ec77858",
        "type": "comment",
        "z": "a827fd671d6a227e",
        "name": "[get] /api/engine/endpoint",
        "info": "",
        "x": 1290,
        "y": 880,
        "wires": []
    },
    {
        "id": "782f59368d76cbd8",
        "type": "comment",
        "z": "a827fd671d6a227e",
        "name": "when `:type` is \"endpoint\", execute all routes to populate netbox",
        "info": "",
        "x": 650,
        "y": 580,
        "wires": []
    },
    {
        "id": "4a209458cc75aee0",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/system/usage",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1270,
        "y": 1200,
        "wires": [
            [
                "4ebcf591c6c3e73b"
            ]
        ]
    },
    {
        "id": "4ebcf591c6c3e73b",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock http://localhost/system/df",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: system df",
        "x": 1300,
        "y": 1260,
        "wires": [
            [
                "cd85c0f71cd8a584"
            ],
            [],
            []
        ]
    },
    {
        "id": "cd85c0f71cd8a584",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1490,
        "y": 1260,
        "wires": [
            [
                "e52d4ade08206e43"
            ]
        ]
    },
    {
        "id": "dcb8324b28bd0fcd",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1870,
        "y": 1260,
        "wires": []
    },
    {
        "id": "e52d4ade08206e43",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "aggregate disk usage data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"layers_size\": msg.payload.LayersSize,\t    \"images\": {\t        \"shared_size\": $reduce(\t            msg.payload.Images,\t            function($acc, $img) {\t                $acc + $img.SharedSize\t            },\t            0\t        ),\t        \"size\": $reduce(\t            msg.payload.Images,\t            function($acc, $img) {\t                $acc + $img.Size\t            },\t            0\t        ),\t        \"virtual_size\": $reduce(\t            msg.payload.Images,\t            function($acc, $img) {\t                $acc + $img.VirtualSize\t            },\t            0\t        )\t\t    },\t    \"containers\": {\t        \"size_rootfs\": $reduce(\t            msg.payload.Containers,\t            function($acc, $container) {\t                $acc + $container.SizeRootFs\t            },\t            0\t        )\t    },\t    \"volumes\": $reduce(\t        msg.payload.Volumes,\t        function($acc, $vol) {\t            $acc + $vol.UsageData.Size\t        },\t        0\t    ),\t    \"build_cache\": $reduce(\t        msg.payload.BuildCache,\t        function($acc, $cache) {\t            $acc + $cache.Size\t        },\t        0\t    )\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 1260,
        "wires": [
            [
                "dcb8324b28bd0fcd"
            ]
        ]
    },
    {
        "id": "cb7c6330c521e939",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1890,
        "y": 160,
        "wires": [
            [
                "98e3ba2ab2c192d7"
            ],
            [
                "eead888045896e1a"
            ]
        ]
    },
    {
        "id": "000871bc55201301",
        "type": "link in",
        "z": "a827fd671d6a227e",
        "name": "Create Networks",
        "links": [
            "86e79ca6ba19c6d7"
        ],
        "x": 1095,
        "y": 420,
        "wires": [
            [
                "2efc622d38ebd4aa"
            ]
        ]
    },
    {
        "id": "279f02a6712c7399",
        "type": "link in",
        "z": "a827fd671d6a227e",
        "name": "Create Volumes",
        "links": [
            "86e79ca6ba19c6d7"
        ],
        "x": 1095,
        "y": 320,
        "wires": [
            [
                "3c46077f2f10a641"
            ]
        ]
    },
    {
        "id": "e4bc72db316a3ba0",
        "type": "link in",
        "z": "a827fd671d6a227e",
        "name": "Create Containers",
        "links": [
            "86e79ca6ba19c6d7"
        ],
        "x": 915,
        "y": 180,
        "wires": [
            [
                "4de06d76878cdbd0"
            ]
        ]
    },
    {
        "id": "4d752b3ed43f85c0",
        "type": "link in",
        "z": "a827fd671d6a227e",
        "name": "Update Host Status",
        "links": [
            "86e79ca6ba19c6d7"
        ],
        "x": 1085,
        "y": 1080,
        "wires": [
            [
                "7a4d9d8b863a0612"
            ]
        ]
    },
    {
        "id": "fca744c188c37382",
        "type": "link in",
        "z": "a827fd671d6a227e",
        "name": "Create Images",
        "links": [
            "86e79ca6ba19c6d7"
        ],
        "x": 1095,
        "y": 620,
        "wires": [
            [
                "840619e239d214aa"
            ]
        ]
    },
    {
        "id": "97877b8f5f5daed0",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/registries",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1270,
        "y": 760,
        "wires": [
            [
                "583d67e7c102474e"
            ]
        ]
    },
    {
        "id": "894f65a81c2cdb87",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1670,
        "y": 760,
        "wires": []
    },
    {
        "id": "583d67e7c102474e",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "registries",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 760,
        "wires": [
            [
                "894f65a81c2cdb87"
            ]
        ]
    },
    {
        "id": "ae9074b49ecc1248",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "set rejectUnauthorized",
        "rules": [
            {
                "t": "set",
                "p": "rejectUnauthorized",
                "pt": "msg",
                "to": "$env(\"DISABLE_SSL_CHECK\") ? false : true",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 500,
        "wires": [
            [
                "4acdf31cd717543f"
            ]
        ]
    },
    {
        "id": "9ada2017c825de2d",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "was netbox webhook?",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/api/containers",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1720,
        "y": 80,
        "wires": [
            [
                "e843e090678a61b9"
            ]
        ]
    },
    {
        "id": "98e3ba2ab2c192d7",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "was netbox webhook?",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/api/containers",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2780,
        "y": 140,
        "wires": [
            [
                "a23553e203eafd05"
            ]
        ]
    },
    {
        "id": "fb53700420b1f1d2",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "Is global registries empty?",
        "property": "registries",
        "propertyType": "global",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2060,
        "y": 640,
        "wires": [
            [
                "edbcc8a9290d5c03"
            ],
            [
                "b5922280a62846d7"
            ]
        ]
    },
    {
        "id": "b5922280a62846d7",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "image2registry",
                "pt": "msg",
                "to": "$merge($map($globalContext(\"registries\"), function($reg) {(\t    $reg.images{$: $reg.id}\t)}))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2400,
        "y": 700,
        "wires": [
            [
                "9cdf672e9401005e"
            ]
        ]
    },
    {
        "id": "edbcc8a9290d5c03",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & '/api/plugins/docker/registries/?host_id=' & $globalContext(\"config\").id",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2390,
        "y": 580,
        "wires": [
            [
                "bf71022495e51bd5"
            ]
        ]
    },
    {
        "id": "bf71022495e51bd5",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "netbox request: get registries",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2660,
        "y": 580,
        "wires": [
            [
                "06a9840e033cf9a9"
            ]
        ]
    },
    {
        "id": "9cdf672e9401005e",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "images",
        "x": 2610,
        "y": 700,
        "wires": [
            [
                "0385e6c197d6a6f8"
            ]
        ]
    },
    {
        "id": "0385e6c197d6a6f8",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & '/api/plugins/docker/images/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "images",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(\t    $count(msg.result.RepoDigests) = 0 and $count(msg.result.RepoTags) = 0\t        ? {\t            \"host\": $globalContext(\"config\").id,\t            \"name\": msg.result.Id,\t            \"registry\": {\t                \"id\": $lookup(msg.image2registry, msg.result.Id)\t            },\t            \"version\": \"<none>\",\t            \"size\": $round(msg.result.Size / 1024 / 1024),\t            \"ImageID\": msg.result.Id,\t            \"Digest\": null\t        }\t        : $count(msg.result.RepoDigests) > 0 and $count(msg.result.RepoTags) = 0\t            ? {\t                \"host\": $globalContext(\"config\").id,\t                \"name\": $split(msg.result.RepoDigests[0], \"@\")[0],\t                \"registry\": {\t                    \"id\": $lookup(msg.image2registry, msg.result.RepoDigests[0])\t                },\t                \"version\": $split(msg.result.RepoDigests[0], \"@\")[-1],\t                \"size\": $round(msg.result.Size / 1024 / 1024),\t                \"ImageID\": msg.result.Id,\t                \"Digest\": $split(msg.result.RepoDigests[0], \"@\")[-1]\t            }\t            : {\t                \"host\": $globalContext(\"config\").id,\t                \"name\": $match(msg.result.RepoTags[0], /(.*):/).groups[0] ? $match(msg.result.RepoTags[0], /(.*):/).groups[0] : $substring(msg.result.Id,7,12),\t                \"registry\": {\t                    \"id\": $lookup(msg.image2registry, msg.result.RepoTags[0])\t                },\t                \"version\": $split($split(msg.result.RepoTags[0], \"/\")[-1], ':')[1] ? $split($split(msg.result.RepoTags[0], \"/\")[-1], ':')[1] : msg.result.Id,\t                \"size\": $round(msg.result.Size / 1024 / 1024),\t                \"ImageID\": msg.result.Id,\t                \"Digest\": $split(msg.result.RepoDigests[0], \"@\")[-1]\t            }\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2810,
        "y": 700,
        "wires": [
            [
                "acb0670187da27e5"
            ]
        ]
    },
    {
        "id": "acb0670187da27e5",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "image has a name?",
        "property": "payload.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 3050,
        "y": 700,
        "wires": [
            [
                "6357171922d6950d"
            ]
        ]
    },
    {
        "id": "6357171922d6950d",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "netbox request: create images",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3310,
        "y": 700,
        "wires": [
            [
                "fd472ae11b597a19"
            ]
        ]
    },
    {
        "id": "fd472ae11b597a19",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 3485,
        "y": 700,
        "wires": []
    },
    {
        "id": "06a9840e033cf9a9",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "local_registries",
                "pt": "msg",
                "to": "(\t    $local_registries := (\t        $getRepo := function($repo) {(\t            $fragments := $split($repo, '/' );\t            $count($fragments) > 1 and $contains($fragments[0], /([.:]|localhost)/)\t                ? {\t                    \"images\": [$repo],\t                    \"name\": $fragments[0]\t                }\t                : {\t                    \"images\": [$repo],\t                    \"name\": \"dockerhub\"\t                }\t        )};\t        [\t            msg.images ~> $map(function($image) {\t                $count($image.RepoDigests) = 0 and $count($image.RepoTags) = 0\t                    ? {\t                        \"images\": [$image.Id],\t                        \"name\": \"dockerhub\"\t                    }\t                    : [(\t                        $count($image.RepoDigests) > 0 and $count($image.RepoTags) = 0\t                            ? $map($image.RepoDigests, function($digest) { $getRepo($digest) })\t                            : $map($image.RepoTags, function($tag) { $getRepo($tag) })\t                    )] {\t                        name: {\t                            \"images\": [images],\t                            \"name\": $distinct(name)\t                        }\t                    } ~> $each(function ($k, $v) { $k })\t            })\t        ]\t    ) {\t        name: {\t            \"images\": [images],\t            \"name\": $distinct(name),\t            \"serveraddress\": \"https://\" & $distinct(name) & \"/v2/\"\t        }\t    }  ~> $each(function ($k, $v) { $k });\t    \t    [$map(msg.payload.results, function($item) {\t        $local_registries ~> | $[name = $item.name] | { \"id\": $item.id, \"serveraddress\": $item.serveraddress } |\t    })]\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2940,
        "y": 580,
        "wires": [
            [
                "94bd890ae0316735"
            ]
        ]
    },
    {
        "id": "e077bc651c250e41",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3610,
        "y": 540,
        "wires": [
            [
                "af88dac05c0843b2"
            ]
        ]
    },
    {
        "id": "94bd890ae0316735",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "[msg.local_registries[name != \"dockerhub\"]]",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3170,
        "y": 580,
        "wires": [
            [
                "fda84d84e044b3c8"
            ],
            [
                "381d1aeea08dd0f1"
            ]
        ]
    },
    {
        "id": "fda84d84e044b3c8",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[msg.local_registries[name != \"dockerhub\"].{\t    \"host\": $globalContext(\"config\").id,\t    \"name\": name,\t    \"serveraddress\": serveraddress\t}]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & '/api/plugins/docker/registries/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t    \"Accept\": \"application/json\"\t\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3380,
        "y": 540,
        "wires": [
            [
                "e077bc651c250e41"
            ]
        ]
    },
    {
        "id": "f0f956ba31c5c2ef",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "images",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 700,
        "wires": [
            [
                "fb53700420b1f1d2"
            ]
        ]
    },
    {
        "id": "af88dac05c0843b2",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "registries",
                "pt": "global",
                "to": "[$map(msg.local_registries, function($item) {\t    $merge([$item, {\"id\": msg.payload[name = $item.name].id}])\t})]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3640,
        "y": 620,
        "wires": [
            [
                "b5922280a62846d7"
            ]
        ]
    },
    {
        "id": "381d1aeea08dd0f1",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "registries",
                "pt": "global",
                "to": "local_registries",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3380,
        "y": 620,
        "wires": [
            [
                "b5922280a62846d7"
            ]
        ]
    },
    {
        "id": "74eb127a6ad3fbdd",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "$globalContext(\"config\").id != \"\" and $globalContext(\"config\").id != null",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1750,
        "y": 640,
        "wires": [
            [
                "f0f956ba31c5c2ef"
            ]
        ]
    },
    {
        "id": "e974d3bd502f614f",
        "type": "http in",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "url": "/api/engine/:type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "ea738534a1b15332",
                "3508df86bd32474e"
            ]
        ]
    },
    {
        "id": "5db8c0db8473ea8e",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "route by :type",
        "property": "req.params.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "containers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "volumes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "networks",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "images",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "endpoint",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 360,
        "y": 320,
        "wires": [
            [
                "163b02482bbd751b"
            ],
            [
                "060ac7e41c2e9d20"
            ],
            [
                "1be042b22cf71230"
            ],
            [
                "dfd9416e4f31ef88"
            ],
            [
                "3584215a923021af"
            ]
        ]
    },
    {
        "id": "12cecd82c1d9f476",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: create container",
        "x": 1190,
        "y": 140,
        "wires": [
            [
                "7b6bbc39f8d6a88e"
            ],
            [],
            []
        ]
    },
    {
        "id": "0e4b8086449ddd56",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: create network",
        "x": 1140,
        "y": 380,
        "wires": [
            [
                "fe7f9567d081d8a7"
            ],
            [],
            []
        ]
    },
    {
        "id": "b49c4832fc35827a",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: pull image",
        "x": 1130,
        "y": 500,
        "wires": [
            [
                "0b12e4e0c5591d31"
            ],
            [],
            []
        ]
    },
    {
        "id": "ea738534a1b15332",
        "type": "http response",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 360,
        "y": 240,
        "wires": []
    },
    {
        "id": "7d0f6463ecfeeb50",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare docker api request",
        "rules": [
            {
                "t": "set",
                "p": "registries",
                "pt": "msg",
                "to": "payload.data.registry",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/images/create?fromImage=' & msg.input.data.name  & '&tag=' & msg.input.data.version & '\\\"' & \" -H 'X-Registry-Auth: \" & $base64encode($string(msg.registries)) & \"'\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.image\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"info\",\t   \"comments\": \"pulling image\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 500,
        "wires": [
            [
                "b49c4832fc35827a",
                "cedc032cfa072c59"
            ]
        ]
    },
    {
        "id": "dfd9416e4f31ef88",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "should we pull?",
        "property": "(\t    (msg.payload.data.size <= 0 \t    and msg.payload.data.ImageID = null)\t    or msg.payload.data.force = true\t)\t",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 600,
        "y": 500,
        "wires": [
            [
                "7d0f6463ecfeeb50"
            ]
        ]
    },
    {
        "id": "2eb2de8f9ca00a2b",
        "type": "json",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2390,
        "y": 520,
        "wires": [
            [
                "9c92ef06fefd5f00"
            ]
        ]
    },
    {
        "id": "cc3c1cea0eb84ca0",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -X GET --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: inspect image",
        "x": 2160,
        "y": 520,
        "wires": [
            [
                "2eb2de8f9ca00a2b"
            ],
            [],
            []
        ]
    },
    {
        "id": "3a845c367b89a50e",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare docker api request",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/images/' & msg.input.data.name  & ':' & msg.input.data.version & '/json\\\"'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.image\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"success\",\t   \"comments\": \"pulled image\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 520,
        "wires": [
            [
                "cc3c1cea0eb84ca0"
            ]
        ]
    },
    {
        "id": "d375e2981f9fa4fb",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/images/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t   \"id\": msg.input.data.id,\t   \"size\": $round(msg.payload.Size / 1024 / 1024),\t   \"ImageID\":  msg.payload.Id,\t   \"Digest\": $split(msg.result[0].RepoDigests[0], \"@\")[-1]\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2810,
        "y": 580,
        "wires": [
            [
                "231e0a10bb5c0cac"
            ]
        ]
    },
    {
        "id": "231e0a10bb5c0cac",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "netbox request: update image",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3090,
        "y": 580,
        "wires": [
            [
                "829323373ce00e9e",
                "34ea063b4d53a0a0",
                "7599bd4551c41d60"
            ]
        ]
    },
    {
        "id": "98985cb45ca68974",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare docker api request",
        "rules": [
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/networks/create\\\" -H \\\"content-type: application/json\\\" -d { \\\"Name\\\":\\\"' & msg.input.data.name  & '\\\",\\\"Driver\\\":\\\"' & msg.input.data.driver & '\\\" }'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"Name\": msg.input.data.name,\t   \"Driver\": msg.input.data.driver\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/networks/create -H 'content-type: application/json' -d '\" & $string(msg.payload) & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 380,
        "wires": [
            [
                "0e4b8086449ddd56"
            ]
        ]
    },
    {
        "id": "060ac7e41c2e9d20",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare docker api request",
        "rules": [
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "dockerDriver",
                "pt": "msg",
                "to": "dockerinfo.Driver",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"Name\": msg.input.data.name,\t   \"Driver\": msg.input.data.driver\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload.DriverOpts",
                "pt": "msg",
                "to": "msg.dockerDriver != \"overlay2\" and $number(msg.input.data.max_size) > 0 ? \t    {\t   \"o\": \"size=\" & msg.input.data.max_size & \"m\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/volumes/create -H 'content-type: application/json' -d '\" & $string(msg.payload) & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 260,
        "wires": [
            [
                "40036eabb47532d6"
            ]
        ]
    },
    {
        "id": "ecc3d13695524e12",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare docker api request",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"Image\": msg.input.data.image.name & \":\" & msg.input.data.image.version,\t   \"Hostname\": msg.input.data.hostname\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/create?name=\" & $string(msg.input.data.name) & \" -H 'content-type: application/json' -d '\" & $string(msg.payload) & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 140,
        "wires": [
            [
                "12cecd82c1d9f476"
            ]
        ]
    },
    {
        "id": "163b02482bbd751b",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "should we create it?",
        "property": "(\t    $boolean(msg.payload.data.name)\t    and msg.payload.data.state = \"none\"\t)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 140,
        "wires": [
            [
                "ecc3d13695524e12"
            ]
        ]
    },
    {
        "id": "836f86ac79995686",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/containers/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t    \"id\": msg.input.data.id,\t    \"host\": msg.input.data.host.id,\t    \"name\": $replace(msg.result.Name,\"/\",\"\"),\t    \"hostname\": msg.result.Config.Hostname,\t    \"state\": \"created\",\t    \"operation\": \"none\",\t    \"status\": msg.result.State.Status = \"running\"\t        ? \"running \" & $ceil(($toMillis($now()) - $toMillis(msg.result.State.StartedAt)) / 1000 / 60 / 60 / 24) & \"d\"\t        : \"na\",\t    \"image\": {\t        \"host\": msg.input.data.host.id,\t        \"ImageID\": msg.result.Image\t    },\t    \"ContainerID\": msg.result.Id,\t    \"network_settings\": [\t        $each(\t            msg.result.NetworkSettings.Networks,\t            function($v, $k) {\t                { \"network\": { \"name\": $k, \"host\": msg.config.id } }\t            }\t        )\t    ],\t    \"ports\": msg.result.NetworkSettings.Ports\t        ? [\t            $each(\t                msg.result.NetworkSettings.Ports,\t                function($v, $k) {\t                    {\t                        \"public_port\": $v[0] = null ? 0 : $v[0].HostPort,\t                        \"private_port\": $split($k,\"/\")[0],\t                        \"type\": $split($k,\"/\")[1]\t                    }\t                }\t            )\t          ]\t        : [\t            $each(\t                msg.result.Config.ExposedPorts,\t                function($v, $k) {\t                    $not($exists($lookup($v,'IP'))) or $lookup($v,'IP') = \"0.0.0.0\"\t                        ? {\t                            \"public_port\": $v.PublicPort ? $v.PublicPort : \"0\",\t                            \"private_port\": $split($k,\"/\")[0],\t                            \"type\": $split($k,\"/\")[1]\t                        }\t                }\t            )\t          ],\t   \"env\": [\t        $map(\t            msg.result.Config.Env,\t            function($v, $k) {\t                {\t                    \"var_name\": $substringBefore($v, \"=\"),\t                    \"value\": $substringAfter($v, \"=\")\t                }\t            }\t        )\t    ],\t   \"labels\": [\t        $each(\t            msg.result.Config.Labels,\t            function($v, $k) {\t                { \"key\": $k, \"value\": $v }\t            }\t        )\t    ],\t   \"mounts\": [\t        $map(\t            msg.result.Mounts,\t            function($v, $k) {\t                $v.Type = \"volume\"\t                    ? {\t                        \"source\": $v.Destination,\t                        \"volume\": { \"name\": $v.Name, \"host\": msg.config.id },\t                        \"read_only\": $v.ReadOnly\t                    }\t            }\t        )\t    ],\t    \"binds\": [\t        $map(\t            msg.result.Mounts,\t            function($v, $k) {\t                $v.Type = \"bind\"\t                    ? {\t                        \"host_path\": $v.Source,\t                        \"container_path\": $v.Destination,\t                        \"read_only\": $v.ReadOnly\t                    }\t            }\t        )\t    ]\t}]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.container\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"success\",\t   \"comments\": \"container created\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2350,
        "y": 140,
        "wires": [
            [
                "a363e235a4fda0b0",
                "4b0b315e5dbc14f1"
            ]
        ]
    },
    {
        "id": "a363e235a4fda0b0",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "netbox request: update container",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2640,
        "y": 140,
        "wires": [
            [
                "14ee8c9739857e6c"
            ]
        ]
    },
    {
        "id": "7b6bbc39f8d6a88e",
        "type": "json",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1410,
        "y": 140,
        "wires": [
            [
                "8689e16407e06796"
            ]
        ]
    },
    {
        "id": "23ca2c7db549468c",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -X GET --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: inspect container",
        "x": 1930,
        "y": 140,
        "wires": [
            [
                "2f564349b35d306d"
            ],
            [],
            []
        ]
    },
    {
        "id": "8689e16407e06796",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare docker api request",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.result.Id) & \"/json -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1620,
        "y": 140,
        "wires": [
            [
                "23ca2c7db549468c"
            ]
        ]
    },
    {
        "id": "2f564349b35d306d",
        "type": "json",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 2150,
        "y": 140,
        "wires": [
            [
                "836f86ac79995686"
            ]
        ]
    },
    {
        "id": "fe7f9567d081d8a7",
        "type": "json",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "3032a954e533689f"
            ]
        ]
    },
    {
        "id": "3032a954e533689f",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/networks/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t   \"id\": msg.input.data.id,\t   \"NetworkID\":  msg.payload.Id,\t   \"state\": \"created\"\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 380,
        "wires": [
            [
                "01899c0865cdbdd7"
            ]
        ]
    },
    {
        "id": "01899c0865cdbdd7",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "netbox request: update network",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1830,
        "y": 380,
        "wires": [
            [
                "310b29964dbaaca6"
            ]
        ]
    },
    {
        "id": "40036eabb47532d6",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "docker api request: create volume",
        "x": 960,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "1be042b22cf71230",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "should we create it?",
        "property": "payload.data.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "creating",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 620,
        "y": 380,
        "wires": [
            [
                "98985cb45ca68974"
            ]
        ]
    },
    {
        "id": "14ee8c9739857e6c",
        "type": "link out",
        "z": "3ea1a4b04d852f38",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 2825,
        "y": 140,
        "wires": []
    },
    {
        "id": "310b29964dbaaca6",
        "type": "link out",
        "z": "3ea1a4b04d852f38",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 2005,
        "y": 380,
        "wires": []
    },
    {
        "id": "829323373ce00e9e",
        "type": "link out",
        "z": "3ea1a4b04d852f38",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 3285,
        "y": 540,
        "wires": []
    },
    {
        "id": "cedc032cfa072c59",
        "type": "subflow:0455d311f0e53c09",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "x": 1070,
        "y": 540,
        "wires": []
    },
    {
        "id": "84d8b152e92556ef",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "did it work?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1630,
        "y": 520,
        "wires": [
            [
                "dce108611cd0c5ba"
            ],
            [
                "3a845c367b89a50e"
            ]
        ]
    },
    {
        "id": "dce108611cd0c5ba",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "set error message",
        "rules": [
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.image\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"danger\",\t   \"comments\": \"not pulled image\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "journal.comments",
                "pt": "msg",
                "to": "$string($map(\t            $split(resultPull, \"\\n\"),\t            function($v) {\t                $v != \"\" ? $eval($v)\t            }\t        ))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 460,
        "wires": [
            [
                "4d5d170a3b67d702"
            ]
        ]
    },
    {
        "id": "4b0b315e5dbc14f1",
        "type": "subflow:0455d311f0e53c09",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "x": 2570,
        "y": 180,
        "wires": []
    },
    {
        "id": "5c79a22a8f9ad79f",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "find image digest in output",
        "rules": [
            {
                "t": "set",
                "p": "resultPull",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$count(\t    $filter(\t        $map(\t            $split(payload, \"\\n\"),\t            function($v) {\t                $v != \"\" ? $eval($v)\t            }\t        ),\t        function($v) {\t            $match(\t                $string($v.status),\t                /^Digest:/\t            )\t        }\t    )\t) > 0",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 460,
        "wires": [
            [
                "84d8b152e92556ef"
            ]
        ]
    },
    {
        "id": "93e4927e83ed7795",
        "type": "comment",
        "z": "3ea1a4b04d852f38",
        "name": "Images",
        "info": "",
        "x": 570,
        "y": 460,
        "wires": []
    },
    {
        "id": "f3223f1c59aae2b0",
        "type": "comment",
        "z": "3ea1a4b04d852f38",
        "name": "Networks",
        "info": "",
        "x": 580,
        "y": 340,
        "wires": []
    },
    {
        "id": "a63cdf11f5086bd8",
        "type": "comment",
        "z": "3ea1a4b04d852f38",
        "name": "Volumes",
        "info": "",
        "x": 580,
        "y": 220,
        "wires": []
    },
    {
        "id": "6a5da2a0bc5f3b01",
        "type": "comment",
        "z": "3ea1a4b04d852f38",
        "name": "Containers",
        "info": "",
        "x": 580,
        "y": 100,
        "wires": []
    },
    {
        "id": "4d5d170a3b67d702",
        "type": "subflow:0455d311f0e53c09",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "x": 2010,
        "y": 460,
        "wires": []
    },
    {
        "id": "3584215a923021af",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "should we refresh?",
        "property": "(\t    msg.payload.data.operation = \"refresh\"\t    and msg.payload.data.state = \"refreshing\"\t)\t",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 660,
        "wires": [
            [
                "253ff620fcf27838"
            ]
        ]
    },
    {
        "id": "955a79aa03666065",
        "type": "comment",
        "z": "3ea1a4b04d852f38",
        "name": "Hosts",
        "info": "",
        "x": 570,
        "y": 620,
        "wires": []
    },
    {
        "id": "253ff620fcf27838",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & \"/api/plugins/docker/containers/\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t   \"Accept\": \"application/json\"\t\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$count(msg.event.data.containers) > 0 ? msg.event.data.containers[].{\"id\": id} : []",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 660,
        "wires": [
            [
                "8608528812c1323a"
            ]
        ]
    },
    {
        "id": "61421eadf150332d",
        "type": "comment",
        "z": "3ea1a4b04d852f38",
        "name": "Delete Containers",
        "info": "",
        "x": 830,
        "y": 620,
        "wires": []
    },
    {
        "id": "8608528812c1323a",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 660,
        "wires": [
            [
                "ade639ed2b7b63be"
            ]
        ]
    },
    {
        "id": "40ef8d60a7da219e",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1470,
        "y": 660,
        "wires": [
            [
                "d3173782d1b51a58"
            ]
        ]
    },
    {
        "id": "ade639ed2b7b63be",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & \"/api/plugins/docker/images/\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t   \"Accept\": \"application/json\"\t\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$count(msg.event.data.images) > 0 ? msg.event.data.images[].{\"id\": id} : []",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 660,
        "wires": [
            [
                "40ef8d60a7da219e"
            ]
        ]
    },
    {
        "id": "04f8498eacf96425",
        "type": "comment",
        "z": "3ea1a4b04d852f38",
        "name": "Delete Images",
        "info": "",
        "x": 1230,
        "y": 620,
        "wires": []
    },
    {
        "id": "755e723a449b9ee2",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 760,
        "wires": [
            [
                "15f257e9999a2b1a"
            ]
        ]
    },
    {
        "id": "d3173782d1b51a58",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & \"/api/plugins/docker/volumes/\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t   \"Accept\": \"application/json\"\t\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$count(msg.event.data.volumes) > 0 ? msg.event.data.volumes[].{\"id\": id} : []",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 760,
        "wires": [
            [
                "755e723a449b9ee2"
            ]
        ]
    },
    {
        "id": "94f8ddb2615a789d",
        "type": "comment",
        "z": "3ea1a4b04d852f38",
        "name": "Delete Volumes",
        "info": "",
        "x": 820,
        "y": 720,
        "wires": []
    },
    {
        "id": "d9bb22467e819b00",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1470,
        "y": 760,
        "wires": [
            [
                "86e79ca6ba19c6d7",
                "8c66ea0e871d7690"
            ]
        ]
    },
    {
        "id": "15f257e9999a2b1a",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & \"/api/plugins/docker/networks/\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t   \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t   \"Accept\": \"application/json\"\t\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$count(msg.event.data.networks) > 0 ? msg.event.data.networks[].{\"id\": id} : []",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 760,
        "wires": [
            [
                "d9bb22467e819b00"
            ]
        ]
    },
    {
        "id": "23e75a4b1c409c83",
        "type": "comment",
        "z": "3ea1a4b04d852f38",
        "name": "Delete Network",
        "info": "",
        "x": 1240,
        "y": 720,
        "wires": []
    },
    {
        "id": "8c66ea0e871d7690",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.host\",\t   \"assigned_object_id\": $globalContext(\"config\").id,\t   \"kind\": \"info\",\t   \"comments\": $string(\"agent refreshed\")\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 840,
        "wires": [
            [
                "208cf12955858ec0"
            ]
        ]
    },
    {
        "id": "208cf12955858ec0",
        "type": "subflow:0455d311f0e53c09",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "x": 1010,
        "y": 840,
        "wires": []
    },
    {
        "id": "86e79ca6ba19c6d7",
        "type": "link out",
        "z": "3ea1a4b04d852f38",
        "name": "After refresh",
        "mode": "link",
        "links": [
            "000871bc55201301",
            "279f02a6712c7399",
            "4d752b3ed43f85c0",
            "e4bc72db316a3ba0",
            "fca744c188c37382"
        ],
        "x": 1595,
        "y": 760,
        "wires": []
    },
    {
        "id": "34ea063b4d53a0a0",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "registries",
                "pt": "global",
                "to": "(\t    $registry := {\t        \"id\": msg.input.data.registry.id,\t        \"name\": msg.input.data.registry.name,\t        \"serveraddress\": msg.input.data.registry.serveraddress,\t        \"images\": [msg.input.data.display]\t    };\t    $globalContext(\"registries\")[id=$registry.id] ? $globalContext(\"registries\") ~> |$[id=$registry.id]|{\"images\":$distinct([$append(images, $registry.images[0])])}| : $append($globalContext(\"registries\"), $registry)\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3330,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "3508df86bd32474e",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "set rejectUnauthorized",
        "rules": [
            {
                "t": "set",
                "p": "rejectUnauthorized",
                "pt": "msg",
                "to": "$env(\"DISABLE_SSL_CHECK\") ? false : true",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 320,
        "wires": [
            [
                "5db8c0db8473ea8e"
            ]
        ]
    },
    {
        "id": "9c92ef06fefd5f00",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "msg.input.data.force = true and ($split(msg.payload.RepoDigests[0], \"@\")[-1] != msg.input.data.Digest or msg.payload.Id != msg.input.data.ImageID)",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2550,
        "y": 520,
        "wires": [
            [
                "20fb85d25c7725c5"
            ],
            [
                "d375e2981f9fa4fb"
            ]
        ]
    },
    {
        "id": "7599bd4551c41d60",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.image\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"success\",\t   \"comments\": \"pulled image\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3890,
        "y": 520,
        "wires": [
            [
                "6dc394adcc5bd2e9"
            ]
        ]
    },
    {
        "id": "6dc394adcc5bd2e9",
        "type": "subflow:0455d311f0e53c09",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "x": 4090,
        "y": 520,
        "wires": []
    },
    {
        "id": "20fb85d25c7725c5",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/images/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(\t   [{\t      \"id\": msg.input.data.id,\t      \"version\": $substring($split(msg.input.data.ImageID, \":\")[-1], 0, 12)\t   }]\t)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2790,
        "y": 460,
        "wires": [
            [
                "6aaf5213853617c2"
            ]
        ]
    },
    {
        "id": "6aaf5213853617c2",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "netbox request: update image",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3070,
        "y": 460,
        "wires": [
            [
                "ebd5345b2ad339da"
            ]
        ]
    },
    {
        "id": "ebd5345b2ad339da",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "prepare netbox request",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "$globalContext(\"config\").netbox_url & '/api/plugins/docker/images/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & $globalContext(\"config\").netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"host\": $globalContext(\"config\").id,\t    \"name\": msg.input.data.name,\t    \"registry\": {\t        \"id\": msg.input.data.registry.id\t    },\t    \"version\": msg.input.data.version,\t    \"size\": $round(msg.result.Size / 1024 / 1024),\t    \"ImageID\": msg.result.Id,\t    \"Digest\": $split(msg.result.RepoDigests[0], \"@\")[-1]\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3350,
        "y": 460,
        "wires": [
            [
                "bcaafd9689539646"
            ]
        ]
    },
    {
        "id": "bcaafd9689539646",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "netbox request: create images",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3630,
        "y": 460,
        "wires": [
            [
                "7599bd4551c41d60"
            ]
        ]
    },
    {
        "id": "0b12e4e0c5591d31",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "was netbox webhook?",
        "property": "config.netbox_url",
        "propertyType": "global",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1380,
        "y": 520,
        "wires": [
            [
                "5c79a22a8f9ad79f"
            ]
        ]
    },
    {
        "id": "dcf35b57666a30f9",
        "type": "http in",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "url": "/api/engine/containers",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "5fb5be1ef90b0e1b",
                "07c699b4b1965ea3"
            ]
        ]
    },
    {
        "id": "e19033703f460489",
        "type": "switch",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "input.data.operation",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "none",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "rename",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pause",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "unpause",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "restart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "kill",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "recreate",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 9,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "7ee645765c871b60"
            ],
            [
                "07b12e9a42e0d339"
            ],
            [
                "f34ee348717b159f"
            ],
            [
                "61221a3271f599d0"
            ],
            [
                "962de83b529657a1"
            ],
            [
                "abf33f3924f79790"
            ],
            [
                "2a9bfcb142dfe007"
            ],
            [
                "ec3fd4f5bb39373e"
            ],
            [
                "a879765250a26a46"
            ]
        ]
    },
    {
        "id": "abf33f3924f79790",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "restart",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/restart -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 280,
        "wires": [
            [
                "a1b35447c74d2e5a"
            ]
        ]
    },
    {
        "id": "a1b35447c74d2e5a",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 950,
        "y": 300,
        "wires": [
            [
                "b61b7a952b88459b"
            ],
            [],
            []
        ]
    },
    {
        "id": "5fb5be1ef90b0e1b",
        "type": "http response",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 250,
        "y": 300,
        "wires": []
    },
    {
        "id": "962de83b529657a1",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "stop",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/stop -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 240,
        "wires": [
            [
                "5de865e872e30739"
            ]
        ]
    },
    {
        "id": "2a9bfcb142dfe007",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/start -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 320,
        "wires": [
            [
                "a1b35447c74d2e5a"
            ]
        ]
    },
    {
        "id": "07c699b4b1965ea3",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.container\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"info\",\t   \"comments\": \"operating \" & msg.input.data.operation & \": pending\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "newinput",
                "pt": "msg",
                "to": "input.data.ContainerID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rejectUnauthorized",
                "pt": "msg",
                "to": "$env(\"DISABLE_SSL_CHECK\") ? false : true",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 160,
        "wires": [
            [
                "e19033703f460489",
                "8a7f167c07eca98c"
            ]
        ]
    },
    {
        "id": "dee6879c09c11a9e",
        "type": "delay",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 880,
        "y": 560,
        "wires": [
            [
                "785742096b0cfd9d"
            ]
        ]
    },
    {
        "id": "c0427424cda32752",
        "type": "delay",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 620,
        "wires": [
            [
                "e785a313f36a684d",
                "640fd6625e14a5ab"
            ]
        ]
    },
    {
        "id": "789b51cd58a06f88",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "stop old",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/stop -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 420,
        "wires": [
            [
                "c1b8315cfebedf9c"
            ]
        ]
    },
    {
        "id": "c1b8315cfebedf9c",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 870,
        "y": 420,
        "wires": [
            [
                "af1be3389f29018e"
            ],
            [],
            []
        ]
    },
    {
        "id": "98651876cfa546d5",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "rename old",
        "rules": [
            {
                "t": "set",
                "p": "millis",
                "pt": "msg",
                "to": "$millis()",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/rename?name=\" & msg.input.data.name & \"-\" & msg.millis & \" -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 420,
        "wires": [
            [
                "789ecf873c6742a1"
            ]
        ]
    },
    {
        "id": "789ecf873c6742a1",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 1290,
        "y": 420,
        "wires": [
            [
                "6624c4443f54445e"
            ],
            [],
            []
        ]
    },
    {
        "id": "6624c4443f54445e",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "create new",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"Image\": msg.input.data.image.name & \":\" & msg.input.data.image.version,\t   \"Hostname\": msg.input.data.hostname,\t   \"Env\": [\t       $map(\t           msg.input.data.env,\t           function($v, $k) {\t               $v.var_name &\"=\" & $v.value\t            }\t        )\t    ],\t   \"Labels\": $merge(\t       $map(\t           msg.input.data.labels,\t           function($v, $k) {\t               { $v.key: $v.value }\t            }\t        )\t    ),\t   \"ExposedPorts\": $merge(\t       $map(\t           msg.input.data.ports,\t           function($v, $k) {\t               {\t                   $v.private_port & \"/\" & $v.type: {} \t                } \t            }\t        )\t    ),\t    \"NetworkingConfig\": {\t       \"EndpointsConfig\": $merge(\t           $map(\t               msg.input.data.network_settings,\t               function($v, $k) {\t                   $k = 0 ? {\t                       $v.network.name : { \"NetworkID\": $v.network.NetworkID } \t                   }\t                }\t            )\t        )\t    },\t   \"HostConfig\": {\t        \"CapAdd\": msg.input.data.cap_add,\t        \"CapDrop\": msg.input.data.cap_drop,\t        \"PidMode\": msg.input.data.pid_mode,\t        \"ExtraHosts\": msg.input.data.extra_hosts,       \t        \"PortBindings\": $merge(\t            $map(\t                msg.input.data.ports,\t                function($v, $k){\t                    {\t                        $v.private_port & \"/\" & $v.type: $v.public_port\t                        ? [\t                            {\t                                \"HostIp\": \"\",\t                                \"HostPort\" : $string($v.public_port) \t                            }\t                        ]\t                            : [] \t                    } \t                }\t            )\t        ),\t        \"Devices\": [\t            $map(\t                msg.input.data.devices,\t                function($v, $k) {\t                    {\t                        \"PathInContainer\": $v.container_path,\t                        \"PathOnHost\": $v.host_path,\t                        \"CgroupPermissions\": \"rwm\"\t                    }\t                }\t            )\t        ],\t        \"Mounts\": [\t            $map(\t                msg.input.data.mounts,\t                function($v, $k) {\t                    {\t                        \"Target\": $v.source,\t                        \"Name\": $v.volume.name,\t                        \"Type\": \"volume\",\t                        \"Destination\": $v.source,\t                        \"ReadOnly\": $v.read_only,\t                        \"Source\": $v.volume.name,\t                        \"Driver\": $v.volume.driver\t                    }\t                }\t            ),\t            $map(\t                msg.input.data.binds,\t                function($v, $k) {\t                    {\t                        \"Target\": $v.container_path,\t                        \"Type\": \"bind\",\t                        \"Destination\": $v.container_path,\t                        \"ReadOnly\": $v.read_only,\t                        \"Source\": $v.host_path,\t                        \"BindOptions\": {\t                           \"CreateMountpoint\": true\t                        }\t                    }\t               }\t            )\t        ],\t        \"RestartPolicy\": {\t           \"Name\": msg.input.data.restart_policy\t        }\t    }\t}\t",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/create?name=\" & $string(msg.input.data.name) & \" -H 'content-type: application/json' -d '\" & $replace($string(msg.payload),\"'\",\"\") & \"'\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "newinput",
                "pt": "msg",
                "to": "input.data.ContainerID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.container\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"success\",\t   \"comments\": \"operation \" & msg.input.data.operation & \": ok\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 540,
        "wires": [
            [
                "3442c7ad3a999fb0"
            ]
        ]
    },
    {
        "id": "3442c7ad3a999fb0",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 670,
        "y": 560,
        "wires": [
            [
                "1bf5b7a7b84328e5"
            ],
            [],
            []
        ]
    },
    {
        "id": "785742096b0cfd9d",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "start new",
        "rules": [
            {
                "t": "set",
                "p": "newinput",
                "pt": "msg",
                "to": "payload.Id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.newinput) & \"/start -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 560,
        "wires": [
            [
                "e89d15e93a51d48e"
            ]
        ]
    },
    {
        "id": "e89d15e93a51d48e",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 1290,
        "y": 560,
        "wires": [
            [
                "feaf6c69125cfe65"
            ],
            [],
            []
        ]
    },
    {
        "id": "e785a313f36a684d",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "delete old",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/containers/' & msg.input.data.name & \"-\" & msg.millis  & '\\\"'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 620,
        "wires": [
            [
                "f23087336998dbdc"
            ]
        ]
    },
    {
        "id": "f23087336998dbdc",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -X DELETE --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 820,
        "y": 620,
        "wires": [
            [
                "db2200593ae3a709"
            ],
            [],
            []
        ]
    },
    {
        "id": "6eb853fc4be1bae7",
        "type": "split",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 740,
        "y": 680,
        "wires": [
            [
                "931e6c9d6c7e2d5b"
            ]
        ]
    },
    {
        "id": "640fd6625e14a5ab",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input.data.network_settings",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 680,
        "wires": [
            [
                "6eb853fc4be1bae7"
            ]
        ]
    },
    {
        "id": "632a00a8c87297bd",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -X POST --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "connect network",
        "x": 1150,
        "y": 680,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "931e6c9d6c7e2d5b",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/networks/' & msg.payload.network.name & '/connect\\\"'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"Container\": msg.newinput }",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 680,
        "wires": [
            [
                "632a00a8c87297bd"
            ]
        ]
    },
    {
        "id": "608ba0f355161cc5",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.newinput) & \"/json -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 760,
        "wires": [
            [
                "3b574a7133f293da"
            ]
        ]
    },
    {
        "id": "3b574a7133f293da",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X GET --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 520,
        "y": 760,
        "wires": [
            [
                "414b3bae361e79d7"
            ],
            [],
            []
        ]
    },
    {
        "id": "a12cfbe9ec7b317a",
        "type": "link in",
        "z": "8e85e8c54d776ddc",
        "name": "fetch container",
        "links": [
            "87af9743f25dca82",
            "ec4a365091d27e97",
            "5d89d141056587f0",
            "611338dc97d7bb91"
        ],
        "x": 165,
        "y": 760,
        "wires": [
            [
                "608ba0f355161cc5"
            ]
        ]
    },
    {
        "id": "87af9743f25dca82",
        "type": "link out",
        "z": "8e85e8c54d776ddc",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "a12cfbe9ec7b317a"
        ],
        "x": 1135,
        "y": 620,
        "wires": []
    },
    {
        "id": "414b3bae361e79d7",
        "type": "json",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 680,
        "y": 760,
        "wires": [
            [
                "f7449a4ba2ed4548"
            ]
        ]
    },
    {
        "id": "f7449a4ba2ed4548",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/containers/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t    \"id\": msg.input.data.id,\t    \"host\": msg.input.data.host.id,\t    \"name\": $replace(msg.result.Name,\"/\",\"\"),\t    \"hostname\": msg.result.Config.Hostname,\t    \"operation\": \"none\",\t    \"state\": msg.result.State.Status,\t    \"extra_hosts\": msg.result.HostConfig.ExtraHosts,\t    \"restart_policy\": msg.result.HostConfig.RestartPolicy.Name = \"\" ? \"no\" : msg.result.HostConfig.RestartPolicy.Name,\t    \"status\": msg.result.State.Status = \"running\"\t        ? \"running \" & $ceil(($toMillis($now()) - $toMillis(msg.result.State.StartedAt)) / 1000 / 60 / 60 / 24) & \"d\"\t        : \"na\",\t    \"image\": {\t        \"host\": msg.input.data.host.id,\t        \"ImageID\": msg.result.Image\t    },\t    \"ContainerID\": msg.result.Id,\t    \"network_settings\": [\t        $each(\t            msg.result.NetworkSettings.Networks,\t            function($v, $k) {\t                { \"network\": { \"name\": $k, \"host\": msg.config.id } }\t            }\t        )\t    ],\t    \"ports\": msg.result.NetworkSettings.Ports\t        ? [\t            $each(\t                msg.result.NetworkSettings.Ports,\t                function($v, $k) {\t                    {\t                        \"public_port\": $v[0] = null ? 0 : $v[0].HostPort,\t                        \"private_port\": $split($k,\"/\")[0],\t                        \"type\": $split($k,\"/\")[1]\t                    }\t                }\t            )\t          ]\t        : [\t            $each(\t                msg.result.Config.ExposedPorts,\t                function($v, $k) {\t                    $not($exists($lookup($v,'IP'))) or $lookup($v,'IP') = \"0.0.0.0\"\t                        ? {\t                            \"public_port\": $v.PublicPort ? $v.PublicPort : \"0\",\t                            \"private_port\": $split($k,\"/\")[0],\t                            \"type\": $split($k,\"/\")[1]\t                        }\t                    }\t                )\t          ],\t    \"env\": [\t        $map(\t            msg.result.Config.Env,\t            function($v, $k) {\t                {\t                    \"var_name\": $substringBefore($v, \"=\"),\t                    \"value\": $substringAfter($v, \"=\")\t                }\t            }\t        )\t    ],\t    \"labels\": [\t        $each(\t            msg.result.Config.Labels,\t            function($v, $k) {\t                { \"key\": $k, \"value\": $v }\t            }\t        )\t    ],\t    \"mounts\": [\t        $map(\t            msg.result.Mounts,\t            function($v, $k) {\t                $v.Type = \"volume\"\t                    ? {\t                        \"source\": $v.Destination,\t                        \"volume\": { \"name\": $v.Name, \"host\": msg.config.id },\t                        \"read_only\": $not($v.RW)\t                    }\t            }\t        )\t    ],\t    \"binds\": [\t        $map(\t            msg.result.Mounts,\t            function($v, $k) {\t                $v.Type = \"bind\"\t                    ? {\t                        \"host_path\": $v.Source,\t                        \"container_path\": $v.Destination,\t                        \"read_only\": $not($v.RW)\t                    }\t            }\t        )\t    ]\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 760,
        "wires": [
            [
                "2386f957b4f1a646",
                "3a5bdb2c55e0c8e7"
            ]
        ]
    },
    {
        "id": "c469b4b880927dc6",
        "type": "http request",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 760,
        "wires": [
            [
                "d10c0e59950649aa",
                "f8966df136c19cca"
            ]
        ]
    },
    {
        "id": "ec4a365091d27e97",
        "type": "link out",
        "z": "8e85e8c54d776ddc",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "a12cfbe9ec7b317a"
        ],
        "x": 1685,
        "y": 280,
        "wires": []
    },
    {
        "id": "29132a5a3f72e359",
        "type": "delay",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1560,
        "y": 280,
        "wires": [
            [
                "ec4a365091d27e97"
            ]
        ]
    },
    {
        "id": "db2200593ae3a709",
        "type": "delay",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1010,
        "y": 620,
        "wires": [
            [
                "87af9743f25dca82"
            ]
        ]
    },
    {
        "id": "d10c0e59950649aa",
        "type": "link out",
        "z": "8e85e8c54d776ddc",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1365,
        "y": 760,
        "wires": []
    },
    {
        "id": "b61b7a952b88459b",
        "type": "switch",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "cont",
                "v": "{\"StatusCode\":0}",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1170,
        "y": 300,
        "wires": [
            [
                "10c0cff73a137bd8"
            ],
            [
                "10c0cff73a137bd8"
            ],
            [
                "fd627a14335caef4"
            ]
        ]
    },
    {
        "id": "f97a2faad0f4275a",
        "type": "subflow:0455d311f0e53c09",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "x": 1230,
        "y": 820,
        "wires": []
    },
    {
        "id": "fd627a14335caef4",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.container\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"danger\",\t   \"comments\": \"operation \" & msg.input.data.operation & \": failed \" & $string(msg.payload)\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 320,
        "wires": [
            [
                "29132a5a3f72e359"
            ]
        ]
    },
    {
        "id": "feaf6c69125cfe65",
        "type": "switch",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1490,
        "y": 560,
        "wires": [
            [
                "c0427424cda32752"
            ],
            [
                "2794b1ae26e695f2"
            ]
        ]
    },
    {
        "id": "4bca60c1739e2a78",
        "type": "subflow:0455d311f0e53c09",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "x": 1510,
        "y": 440,
        "wires": []
    },
    {
        "id": "2794b1ae26e695f2",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.container\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"danger\",\t   \"comments\":  \"operation \" & msg.input.data.operation & \": error => \" & $string(msg.payload)\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 480,
        "wires": [
            [
                "4bca60c1739e2a78",
                "5d89d141056587f0"
            ]
        ]
    },
    {
        "id": "e173b20c711e5320",
        "type": "switch",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "Id",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 500,
        "wires": [
            [
                "dee6879c09c11a9e"
            ],
            [
                "2794b1ae26e695f2"
            ]
        ]
    },
    {
        "id": "1bf5b7a7b84328e5",
        "type": "json",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 790,
        "y": 500,
        "wires": [
            [
                "e173b20c711e5320"
            ]
        ]
    },
    {
        "id": "7ee645765c871b60",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "none",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"RestartPolicy\": {\t        \"Name\": msg.input.data.restart_policy\t    }\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/update -H 'content-type: application/json' -d '\" & msg.payload & \"'\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.container\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"success\",\t   \"comments\": \"operation \" & msg.input.data.operation & \": ok\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "fd8c8c6e687c07bd",
                "07b12e9a42e0d339"
            ]
        ]
    },
    {
        "id": "fd8c8c6e687c07bd",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 950,
        "y": 60,
        "wires": [
            [
                "5e48ca8642958b39"
            ],
            [],
            []
        ]
    },
    {
        "id": "07b12e9a42e0d339",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "rename",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/rename?name=\" & msg.input.data.name & \" -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 120,
        "wires": [
            [
                "f464210584622a25"
            ]
        ]
    },
    {
        "id": "f34ee348717b159f",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "pause",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/pause -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 160,
        "wires": [
            [
                "f464210584622a25"
            ]
        ]
    },
    {
        "id": "61221a3271f599d0",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "unpause",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/unpause -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 200,
        "wires": [
            [
                "f464210584622a25"
            ]
        ]
    },
    {
        "id": "ec3fd4f5bb39373e",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "kill",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/kill -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 360,
        "wires": [
            [
                "a1b35447c74d2e5a"
            ]
        ]
    },
    {
        "id": "8a7f167c07eca98c",
        "type": "subflow:0455d311f0e53c09",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "x": 510,
        "y": 100,
        "wires": []
    },
    {
        "id": "5e48ca8642958b39",
        "type": "switch",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "{\"Warnings\":null}",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "b647369ca1895887"
            ],
            [
                "f94a9a239bbfa606"
            ]
        ]
    },
    {
        "id": "b647369ca1895887",
        "type": "subflow:0455d311f0e53c09",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "x": 1530,
        "y": 40,
        "wires": []
    },
    {
        "id": "f94a9a239bbfa606",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.container\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"warning\",\t   \"comments\": \"operation \" & msg.input.data.operation & \": failed\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 80,
        "wires": [
            [
                "b647369ca1895887"
            ]
        ]
    },
    {
        "id": "af1be3389f29018e",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "wait",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/wait -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 360,
        "wires": [
            [
                "8e599cf2e587d848"
            ]
        ]
    },
    {
        "id": "8e599cf2e587d848",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "98651876cfa546d5"
            ],
            [],
            []
        ]
    },
    {
        "id": "f464210584622a25",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 950,
        "y": 160,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2386f957b4f1a646",
        "type": "switch",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "config.id",
        "propertyType": "global",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 760,
        "wires": [
            [
                "f97a2faad0f4275a",
                "c469b4b880927dc6"
            ],
            []
        ]
    },
    {
        "id": "5d89d141056587f0",
        "type": "link out",
        "z": "8e85e8c54d776ddc",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "a12cfbe9ec7b317a"
        ],
        "x": 1395,
        "y": 480,
        "wires": []
    },
    {
        "id": "68f8c6e5146c77db",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "wait",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.ContainerID) & \"/wait -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 220,
        "wires": [
            [
                "2bc6d6c58919b5d5"
            ]
        ]
    },
    {
        "id": "2bc6d6c58919b5d5",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 1250,
        "y": 220,
        "wires": [
            [
                "b61b7a952b88459b"
            ],
            [],
            []
        ]
    },
    {
        "id": "5de865e872e30739",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 930,
        "y": 240,
        "wires": [
            [
                "68f8c6e5146c77db"
            ],
            [],
            []
        ]
    },
    {
        "id": "a879765250a26a46",
        "type": "switch",
        "z": "8e85e8c54d776ddc",
        "name": "recreate agent ?",
        "property": "input.data.image.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "saashup/netbox-docker-agent",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 380,
        "wires": [
            [
                "789b51cd58a06f88"
            ],
            [
                "611338dc97d7bb91"
            ]
        ]
    },
    {
        "id": "611338dc97d7bb91",
        "type": "link out",
        "z": "8e85e8c54d776ddc",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "a12cfbe9ec7b317a"
        ],
        "x": 455,
        "y": 440,
        "wires": []
    },
    {
        "id": "10c0cff73a137bd8",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.container\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"success\",\t   \"comments\": \"operation \" & msg.input.data.operation & \": ok \" & $string(msg.payload)\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 280,
        "wires": [
            [
                "29132a5a3f72e359"
            ]
        ]
    },
    {
        "id": "3a5bdb2c55e0c8e7",
        "type": "debug",
        "z": "8e85e8c54d776ddc",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 840,
        "wires": []
    },
    {
        "id": "f8966df136c19cca",
        "type": "debug",
        "z": "8e85e8c54d776ddc",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 700,
        "wires": []
    },
    {
        "id": "3eb97ccb653722a0",
        "type": "http in",
        "z": "177047e3d7a351be",
        "name": "",
        "url": "/api/engine/:type",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "0a57e0d1d1e7b853",
                "def493fd34b215bc"
            ]
        ]
    },
    {
        "id": "4ee9334de2f7b337",
        "type": "switch",
        "z": "177047e3d7a351be",
        "name": "",
        "property": "req.params.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "containers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "volumes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "networks",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "images",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "endpoint",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 590,
        "y": 200,
        "wires": [
            [
                "6b8914321e269ff0"
            ],
            [
                "fbf3bcd631979ce5"
            ],
            [
                "ba51cee0aa2ab895"
            ],
            [
                "12e8ba367b6e0a48"
            ],
            [
                "00a7f64ecb58e0c8",
                "b5f089d7532c24d8"
            ]
        ]
    },
    {
        "id": "0a57e0d1d1e7b853",
        "type": "http response",
        "z": "177047e3d7a351be",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 100,
        "y": 260,
        "wires": []
    },
    {
        "id": "489afa20fcdf043a",
        "type": "exec",
        "z": "177047e3d7a351be",
        "command": "curl -s -X DELETE --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "images",
        "x": 1540,
        "y": 300,
        "wires": [
            [
                "06d9e416e24ea04b",
                "b87eba8ac3329ce3"
            ],
            [],
            []
        ]
    },
    {
        "id": "68ea572045adeda7",
        "type": "change",
        "z": "177047e3d7a351be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/images/' & msg.payload.data.ImageID & '\\\"'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.host\",\t   \"assigned_object_id\": msg.config.id,\t   \"kind\": \"success\",\t   \"comments\": $string(msg.input.data.ImageID & \" removed\")\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 280,
        "wires": [
            [
                "489afa20fcdf043a"
            ]
        ]
    },
    {
        "id": "f40ceca8b2fe91cf",
        "type": "exec",
        "z": "177047e3d7a351be",
        "command": "curl -s -X DELETE --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "networks",
        "x": 1140,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8f39826ad701f225",
        "type": "change",
        "z": "177047e3d7a351be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/networks/' & msg.payload.data.name  & '\\\"'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 220,
        "wires": [
            [
                "f40ceca8b2fe91cf"
            ]
        ]
    },
    {
        "id": "8dc73accdac55b3b",
        "type": "exec",
        "z": "177047e3d7a351be",
        "command": "curl -s -X DELETE --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "volumes",
        "x": 1140,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "059ff76a638ac4d6",
        "type": "change",
        "z": "177047e3d7a351be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/volumes/' & msg.payload.data.name  & '\\\"'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 140,
        "wires": [
            [
                "8dc73accdac55b3b"
            ]
        ]
    },
    {
        "id": "551cf7f33257a9d3",
        "type": "exec",
        "z": "177047e3d7a351be",
        "command": "curl -s -X DELETE --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 1150,
        "y": 60,
        "wires": [
            [
                "b87eba8ac3329ce3"
            ],
            [],
            []
        ]
    },
    {
        "id": "2475512b9999fc45",
        "type": "change",
        "z": "177047e3d7a351be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/containers/' & msg.payload.data.ContainerID  & '\\\"'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.host\",\t   \"assigned_object_id\": msg.config.id,\t   \"kind\": \"info\",\t   \"comments\": msg.input.data.name & \" removed - \" & $string(msg.payload)\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 60,
        "wires": [
            [
                "551cf7f33257a9d3"
            ]
        ]
    },
    {
        "id": "00a7f64ecb58e0c8",
        "type": "change",
        "z": "177047e3d7a351be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"netbox_url\":\"\",\"netbox_token\":\"\",\"ui\":1}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 380,
        "wires": [
            [
                "53c71fbaf754a819"
            ]
        ]
    },
    {
        "id": "6b8914321e269ff0",
        "type": "switch",
        "z": "177047e3d7a351be",
        "name": "",
        "property": "msg.payload.data.host.state in [\"deleted\", \"refreshing\"]",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 60,
        "wires": [
            [
                "2475512b9999fc45"
            ]
        ]
    },
    {
        "id": "fbf3bcd631979ce5",
        "type": "switch",
        "z": "177047e3d7a351be",
        "name": "",
        "property": "msg.payload.data.host.state in [\"deleted\", \"refreshing\"]",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 160,
        "wires": [
            [
                "059ff76a638ac4d6"
            ]
        ]
    },
    {
        "id": "ba51cee0aa2ab895",
        "type": "switch",
        "z": "177047e3d7a351be",
        "name": "",
        "property": "msg.payload.data.host.state in [\"deleted\", \"refreshing\"]",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 220,
        "wires": [
            [
                "8f39826ad701f225"
            ]
        ]
    },
    {
        "id": "74282c37e59eb461",
        "type": "switch",
        "z": "177047e3d7a351be",
        "name": "",
        "property": "msg.payload.data.host.state in [\"deleted\", \"refreshing\"]",
        "propertyType": "jsonata",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 950,
        "y": 300,
        "wires": [
            [
                "e1a1c4427886a1e6"
            ]
        ]
    },
    {
        "id": "53c71fbaf754a819",
        "type": "link out",
        "z": "177047e3d7a351be",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "b0765338f9440bd2"
        ],
        "x": 945,
        "y": 380,
        "wires": []
    },
    {
        "id": "b87eba8ac3329ce3",
        "type": "subflow:0455d311f0e53c09",
        "z": "177047e3d7a351be",
        "name": "",
        "x": 1430,
        "y": 180,
        "wires": []
    },
    {
        "id": "e1a1c4427886a1e6",
        "type": "switch",
        "z": "177047e3d7a351be",
        "name": "",
        "property": "msg.payload.data.ImageID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "68ea572045adeda7"
            ],
            [
                "231ec94d70cd3762"
            ]
        ]
    },
    {
        "id": "231ec94d70cd3762",
        "type": "change",
        "z": "177047e3d7a351be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/images/' & msg.input.data.name  & ':' & msg.input.data.version & '\\\"'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.host\",\t   \"assigned_object_id\": msg.config.id,\t   \"kind\": \"success\",\t   \"comments\": $string(msg.input.data.name  & ':' & msg.input.data.version & \" removed\")\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 320,
        "wires": [
            [
                "489afa20fcdf043a"
            ]
        ]
    },
    {
        "id": "def493fd34b215bc",
        "type": "change",
        "z": "177047e3d7a351be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "rejectUnauthorized",
                "pt": "msg",
                "to": "$env(\"DISABLE_SSL_CHECK\") ? false : true",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 200,
        "wires": [
            [
                "4ee9334de2f7b337"
            ]
        ]
    },
    {
        "id": "b5f089d7532c24d8",
        "type": "change",
        "z": "177047e3d7a351be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 440,
        "wires": [
            [
                "e32a8db0e7ec4006"
            ]
        ]
    },
    {
        "id": "e32a8db0e7ec4006",
        "type": "link out",
        "z": "177047e3d7a351be",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "e383062c735738ca"
        ],
        "x": 945,
        "y": 440,
        "wires": []
    },
    {
        "id": "06d9e416e24ea04b",
        "type": "change",
        "z": "177047e3d7a351be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "registries",
                "pt": "global",
                "to": "(\t    $id := msg.input.data.registry.id;\t    $image := msg.input.data.display;\t    [$globalContext(\"registries\") ~> | $[id=$id] | {\"images\": [$filter(images, function($v) { $v != $image })]} | ~> $filter(function($v) { $v.images != [] })]\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "12e8ba367b6e0a48",
        "type": "switch",
        "z": "177047e3d7a351be",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 300,
        "wires": [
            [
                "74282c37e59eb461"
            ]
        ]
    },
    {
        "id": "305f23764ca23090",
        "type": "change",
        "z": "1d08205d001d337b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t  \"AttachStdin\": false,\t  \"AttachStdout\": true,\t  \"AttachStderr\": true,\t  \"Tty\": false,\t  \"Cmd\": msg.payload.cmd\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & msg.req.params.id & \"/exec\" & \" -H 'content-type: application/json' -d '\" & $string(msg.payload) & \"'\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "disable_exec",
                "pt": "msg",
                "to": "DISABLE_EXEC",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 60,
        "wires": [
            [
                "d1c9f9295fdca517"
            ]
        ]
    },
    {
        "id": "5f124776ff1a85d7",
        "type": "exec",
        "z": "1d08205d001d337b",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 170,
        "y": 140,
        "wires": [
            [
                "b8d355c66845317c"
            ],
            [],
            []
        ]
    },
    {
        "id": "b8d355c66845317c",
        "type": "json",
        "z": "1d08205d001d337b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "984d2a4c759834b6"
            ]
        ]
    },
    {
        "id": "984d2a4c759834b6",
        "type": "change",
        "z": "1d08205d001d337b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/exec/\" & msg.payload.Id & \"/start\" & \" -H 'content-type: application/json' -d '\" & $string(msg.payload) & \"'\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t  \"Detach\": false,\t  \"Tty\": false\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 120,
        "wires": [
            [
                "298e6c9fd2249160"
            ]
        ]
    },
    {
        "id": "298e6c9fd2249160",
        "type": "exec",
        "z": "1d08205d001d337b",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 810,
        "y": 140,
        "wires": [
            [
                "408e711657ee14ab"
            ],
            [],
            []
        ]
    },
    {
        "id": "408e711657ee14ab",
        "type": "function",
        "z": "1d08205d001d337b",
        "name": "function 1",
        "func": "msg.payload = {\n    stdout: msg.payload.toString('utf8')\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 140,
        "wires": [
            [
                "21201e5b02739ce2"
            ]
        ]
    },
    {
        "id": "5528cd8d52eeef7a",
        "type": "http in",
        "z": "1d08205d001d337b",
        "name": "",
        "url": "/api/engine/containers/:id/exec",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 60,
        "wires": [
            [
                "305f23764ca23090"
            ]
        ]
    },
    {
        "id": "21201e5b02739ce2",
        "type": "http response",
        "z": "1d08205d001d337b",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/plain; charset=utf-8"
        },
        "x": 1190,
        "y": 120,
        "wires": []
    },
    {
        "id": "68e3b18ef95a2437",
        "type": "http in",
        "z": "1d08205d001d337b",
        "name": "",
        "url": "/api/engine/containers/:id/logs",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 240,
        "wires": [
            [
                "b4344a41ded8b66c"
            ]
        ]
    },
    {
        "id": "b4344a41ded8b66c",
        "type": "change",
        "z": "1d08205d001d337b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"'http://localhost/containers/\" & msg.req.params.id & \"/logs?stdout=true&stderr=true&timestamps=true'\" & \" -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 240,
        "wires": [
            [
                "8d917368641769bf"
            ]
        ]
    },
    {
        "id": "8d917368641769bf",
        "type": "exec",
        "z": "1d08205d001d337b",
        "command": "curl -s -X GET --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 690,
        "y": 240,
        "wires": [
            [
                "cd52bc77a65b9441"
            ],
            [],
            []
        ]
    },
    {
        "id": "a64c5d51b4e5282e",
        "type": "function",
        "z": "1d08205d001d337b",
        "name": "function 2",
        "func": "msg.parts.count--;\nmsg.payload = msg.payload.toString('utf8');\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 220,
        "wires": [
            [
                "017f5c4bd4913168"
            ]
        ]
    },
    {
        "id": "4162e2069a4e1e72",
        "type": "split",
        "z": "1d08205d001d337b",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 950,
        "y": 220,
        "wires": [
            [
                "a64c5d51b4e5282e"
            ]
        ]
    },
    {
        "id": "017f5c4bd4913168",
        "type": "change",
        "z": "1d08205d001d337b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$substring(msg.payload, 8)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 280,
        "wires": [
            [
                "31df03c05b2ba92d"
            ]
        ]
    },
    {
        "id": "31df03c05b2ba92d",
        "type": "join",
        "z": "1d08205d001d337b",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1230,
        "y": 280,
        "wires": [
            [
                "7da9a83d74d9daed"
            ]
        ]
    },
    {
        "id": "d1c9f9295fdca517",
        "type": "switch",
        "z": "1d08205d001d337b",
        "name": "",
        "property": "disable_exec",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 60,
        "wires": [
            [
                "21201e5b02739ce2"
            ],
            [
                "5f124776ff1a85d7"
            ]
        ]
    },
    {
        "id": "cd52bc77a65b9441",
        "type": "switch",
        "z": "1d08205d001d337b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 220,
        "wires": [
            [
                "4162e2069a4e1e72"
            ],
            [
                "86a15ae6532cb93b"
            ]
        ]
    },
    {
        "id": "7da9a83d74d9daed",
        "type": "http response",
        "z": "1d08205d001d337b",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/plain; charset=utf-8"
        },
        "x": 910,
        "y": 320,
        "wires": []
    },
    {
        "id": "86a15ae6532cb93b",
        "type": "change",
        "z": "1d08205d001d337b",
        "name": "no logs",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 280,
        "wires": [
            [
                "7da9a83d74d9daed"
            ]
        ]
    },
    {
        "id": "788067a8780c7835",
        "type": "http in",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "url": "/metrics",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 340,
        "wires": [
            [
                "73888c186762494e"
            ]
        ]
    },
    {
        "id": "3fd4e88a742e84c2",
        "type": "exec",
        "z": "3ee57a9d7dc5fae7",
        "command": "curl -s -X GET --unix-socket /var/run/docker.sock http://localhost/containers/json?all=1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Fetch all containers",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "c6a678adf2e69013"
            ],
            [],
            [
                "5fa4945a837775f3"
            ]
        ]
    },
    {
        "id": "c6a678adf2e69013",
        "type": "switch",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 60,
        "wires": [
            [],
            [
                "0d955034e00fa0f5"
            ]
        ]
    },
    {
        "id": "0d955034e00fa0f5",
        "type": "json",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 790,
        "y": 60,
        "wires": [
            [
                "a15a7b2000f3b6c9"
            ]
        ]
    },
    {
        "id": "990b1773880e3b7d",
        "type": "template",
        "z": "3ee57a9d7dc5fae7",
        "name": "Containers2Prometheus",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "# HELP netbox_docker_agent_container_running Show if a container is running\n# TYPE netbox_docker_agent_container_running gauge\n{{#container.running}}\nnetbox_docker_agent_container_running{name=\"{{{Names.0}}}\", state=\"{{{ State }}}\", status=\"{{{ Status }}}\"} 1\n{{/container.running}}\n\n# HELP netbox_docker_agent_container_exited Show if a container is exited\n# TYPE netbox_docker_agent_container_exited gauge\n{{#container.exited}}\nnetbox_docker_agent_container_exited{name=\"{{{Names.0}}}\", state=\"{{{ State }}}\", status=\"{{{ Status }}}\"} 1\n{{/container.exited}}\n\n# HELP netbox_docker_agent_container_stopped Show if a container is exited\n# TYPE netbox_docker_agent_container_stopped gauge\n{{#container.stopped}}\nnetbox_docker_agent_container_stopped{name=\"{{{Names.0}}}\", state=\"{{{ State }}}\", status=\"{{{ Status }}}\"} 1\n{{/container.stopped}}\n\n# HELP netbox_docker_agent_docker_daemon Show if the connection to the daemon is working\n# TYPE netbox_docker_agent_docker_daemon gauge\nnetbox_docker_agent_docker_daemon{socket=\"/var/run/docker.socket\"} {{container.docker_daemon}}\n\n# HELP netbox_docker_agent_netbox_error_response Show the netbox error response counter\n# TYPE netbox_docker_agent_netbox_error_response counter\nnetbox_docker_agent_netbox_error_response{} {{global.errorCounter}}",
        "output": "str",
        "x": 1010,
        "y": 120,
        "wires": [
            [
                "cdecbe9f078ed45b"
            ]
        ]
    },
    {
        "id": "a15a7b2000f3b6c9",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "container",
                "pt": "msg",
                "to": "{\t    \"running\": msg.payload[State= \"running\"],\t    \"exited\": msg.payload[State= \"exited\"],\t    \"stopped\": msg.payload[State= \"stopped\"],\t    \"docker_daemon\": 1\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 60,
        "wires": [
            [
                "990b1773880e3b7d"
            ]
        ]
    },
    {
        "id": "cdecbe9f078ed45b",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "name=\"/",
                "fromt": "str",
                "to": "name=\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "metricPayload",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2f954b0ac225c1ed",
        "type": "inject",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "props": [],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "3fd4e88a742e84c2"
            ]
        ]
    },
    {
        "id": "cb3f2dc534bf1c31",
        "type": "http response",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 670,
        "y": 340,
        "wires": []
    },
    {
        "id": "73888c186762494e",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "metricPayload",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 340,
        "wires": [
            [
                "cb3f2dc534bf1c31"
            ]
        ]
    },
    {
        "id": "efb628585a41dde5",
        "type": "inject",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 270,
        "y": 240,
        "wires": [
            [
                "fd27e954b669b5dc"
            ]
        ]
    },
    {
        "id": "fd27e954b669b5dc",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorCounter",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "df2cb95dca98e944",
        "type": "switch",
        "z": "3ee57a9d7dc5fae7",
        "name": "status code >= 400",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 420,
        "wires": [
            [
                "efc97803a70d7841",
                "d138d4d1284cc210"
            ]
        ]
    },
    {
        "id": "32266cc01be545d1",
        "type": "debug",
        "z": "3ee57a9d7dc5fae7",
        "name": "Log console",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1000,
        "y": 420,
        "wires": []
    },
    {
        "id": "efc97803a70d7841",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "inc counter",
        "rules": [
            {
                "t": "set",
                "p": "errorCounter",
                "pt": "global",
                "to": "$globalContext('errorCounter') + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 420,
        "wires": [
            [
                "32266cc01be545d1"
            ]
        ]
    },
    {
        "id": "36f439d2ba0ac71a",
        "type": "link in",
        "z": "3ee57a9d7dc5fae7",
        "name": "log cb",
        "links": [
            "0f90d4602b562160",
            "14ee8c9739857e6c",
            "2b11dfa028894e68",
            "310b29964dbaaca6",
            "466a424beeab3020",
            "829323373ce00e9e",
            "85576a332e06d405",
            "d10c0e59950649aa",
            "eac6a267ba1d8eaf",
            "fd472ae11b597a19"
        ],
        "x": 425,
        "y": 420,
        "wires": [
            [
                "df2cb95dca98e944"
            ]
        ]
    },
    {
        "id": "d138d4d1284cc210",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "journal",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.host\",\t   \"assigned_object_id\": msg.config.id,\t   \"kind\": \"danger\",\t   \"comments\": $string(msg.result)\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 480,
        "wires": [
            [
                "b68cbe91e9163c46"
            ]
        ]
    },
    {
        "id": "b68cbe91e9163c46",
        "type": "subflow:0455d311f0e53c09",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "x": 1020,
        "y": 480,
        "wires": []
    },
    {
        "id": "b6ef3e45b5156055",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "container",
                "pt": "msg",
                "to": "{\"running\":[],\"exited\":[],\"stopped\":[],\"docker_daemon\":0}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 120,
        "wires": [
            [
                "990b1773880e3b7d"
            ]
        ]
    },
    {
        "id": "5fa4945a837775f3",
        "type": "switch",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "7",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "b6ef3e45b5156055",
                "8e2d58df583dd160"
            ]
        ]
    },
    {
        "id": "8e2d58df583dd160",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "docker socket error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 200,
        "wires": [
            [
                "32266cc01be545d1"
            ]
        ]
    }
]