[
    {
        "id": "216db6efc0df9bc0",
        "type": "tab",
        "label": "INIT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a827fd671d6a227e",
        "type": "tab",
        "label": "API - GET",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ea1a4b04d852f38",
        "type": "tab",
        "label": "API - POST",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8e85e8c54d776ddc",
        "type": "tab",
        "label": "API - PUT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5d9b33c2005cbce7",
        "type": "tab",
        "label": "API - DELETE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ee57a9d7dc5fae7",
        "type": "tab",
        "label": "METRICS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d7a287982b6bd303",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Save config",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 290,
        "y": 220,
        "wires": [
            [
                "3f489e8a5d253765"
            ]
        ]
    },
    {
        "id": "82a20fd37e28308d",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "deb89a9f64f32d7e",
        "type": "file",
        "z": "216db6efc0df9bc0",
        "name": "",
        "filename": "/data/settings.js",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 660,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "6cdb21940f0b28b7",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Update",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 300,
        "wires": [
            [
                "55c03f8643b324ae"
            ]
        ]
    },
    {
        "id": "55c03f8643b324ae",
        "type": "template",
        "z": "216db6efc0df9bc0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "data = require(\"./package.json\")\n\nmodule.exports = {\n    credentialSecret: \"saashup\",\n    flowFile: \"flows.json\",\n    flowFilePretty: true,\n    adminAuth: {\n        type: \"credentials\",\n        users: [{\n            username: \"admin\",\n            password: \"$2a$08$s.NFdSn4Gm4d7gHErya//e6O8RO1/3f7TZ7zflXJ9jfFV0cI6jGwK\",\n            permissions: \"*\"\n        }]\n    },\n    /*https: {\n      key: require(\"fs\").readFileSync('/data/privkey.pem'),\n      cert: require(\"fs\").readFileSync('/data/cert.pem')\n    },\n    requireHttps: true,*/\n    httpNodeAuth: {\n        user:\"admin\",pass:\"$2a$08$s.NFdSn4Gm4d7gHErya//e6O8RO1/3f7TZ7zflXJ9jfFV0cI6jGwK\"\n    },\n    uiPort: process.env.PORT || 1880,\n    httpAdminRoot: '/nodered',\n    diagnostics: {\n        enabled: true,\n        ui: true,\n    },\n    runtimeState: {\n        enabled: false,\n        ui: false,\n    },\n    logging: {\n        console: {\n            level: \"info\",\n            metrics: false,\n            audit: false,\n            handler: function(settings) {\n                return function(msg) {\n                    const level = {\n                        20: 'error',\n                        30: 'warn',\n                        40: 'info'\n                    };\n                    const lvl = \"level\" in msg ? msg.level : \"40\";\n\n                    delete msg.type;\n                    delete msg.z;\n                    delete msg.path;\n                    delete msg.name;\n                    delete msg.id;\n\n                    let line = `${data.name} level=${level[lvl]} version=${data.version}`;\n\n                    if (typeof msg.msg === 'object') {\n                        for (const key of Object.keys(msg.msg)) {\n                            line += ` ${key}=${JSON.stringify(msg.msg[key])}`;\n                        }\n                    } else {\n                        line += ` msg=` + JSON.stringify(msg.msg);\n                    }\n\n                    if (lvl <= 20) {\n                        return console.error(line);\n                    }\n\n                    return console.log(line);\n                }\n            }\n        }\n    },\n    exportGlobalContextKeys: false,\n    externalModules: {\n    },\n    editorTheme: {\n        tours: false,\n        palette: {\n        },\n        projects: {\n            enabled: false,\n            workflow: {\n                mode: \"manual\"\n            }\n        },\n        codeEditor: {\n            lib: \"monaco\",\n            options: {\n            }\n        },\n        markdownEditor: {\n            mermaid: {\n                enabled: true\n            }\n        },\n    },\n    functionExternalModules: true,\n    functionTimeout: 0,\n    functionGlobalContext: {\n    },\n    debugMaxLength: 1000,\n    mqttReconnectTime: 15000,\n    serialReconnectTime: 15000\n}\n",
        "output": "str",
        "x": 460,
        "y": 300,
        "wires": [
            [
                "deb89a9f64f32d7e"
            ]
        ]
    },
    {
        "id": "b3814c680815a25b",
        "type": "exec",
        "z": "216db6efc0df9bc0",
        "command": "curl --no-buffer --unix-socket /var/run/docker.sock http://localhost/events",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Events",
        "x": 470,
        "y": 400,
        "wires": [
            [
                "7c210c45ea82059e"
            ],
            [],
            []
        ]
    },
    {
        "id": "681c7db4b492c74e",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Events",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 400,
        "wires": [
            [
                "b3814c680815a25b"
            ]
        ]
    },
    {
        "id": "06b0b14f4b337cfe",
        "type": "switch",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 380,
        "wires": [
            [
                "8e555efa2728d8b8"
            ]
        ]
    },
    {
        "id": "7c210c45ea82059e",
        "type": "split",
        "z": "216db6efc0df9bc0",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 630,
        "y": 380,
        "wires": [
            [
                "06b0b14f4b337cfe"
            ]
        ]
    },
    {
        "id": "da696e53c1c7431f",
        "type": "switch",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload.status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "exec_create: /bin/sh -c node /healthcheck.js",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "exec_start: /bin/sh -c node /healthcheck.js",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "exec_die",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1090,
        "y": 380,
        "wires": [
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "8e555efa2728d8b8",
        "type": "json",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 380,
        "wires": [
            [
                "da696e53c1c7431f"
            ]
        ]
    },
    {
        "id": "3f489e8a5d253765",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 220,
        "wires": [
            [
                "d216b6ee68a71932"
            ]
        ]
    },
    {
        "id": "d216b6ee68a71932",
        "type": "file",
        "z": "216db6efc0df9bc0",
        "name": "",
        "filename": "/data/config.js",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 720,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "5693719743b16e0d",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Set config start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 300,
        "y": 60,
        "wires": [
            [
                "4f7dddf957ee0796",
                "2b9a4a79e583d72a"
            ]
        ]
    },
    {
        "id": "4f7dddf957ee0796",
        "type": "file in",
        "z": "216db6efc0df9bc0",
        "name": "",
        "filename": "/data/config.js",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 500,
        "y": 60,
        "wires": [
            [
                "b4754f87e535ecc9"
            ]
        ]
    },
    {
        "id": "b4754f87e535ecc9",
        "type": "json",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 650,
        "y": 60,
        "wires": [
            [
                "82a20fd37e28308d"
            ]
        ]
    },
    {
        "id": "3b22d73702c2e8a8",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "Prune",
        "props": [
            {
                "p": "networks",
                "v": "http://localhost/networks/prune",
                "vt": "str"
            },
            {
                "p": "images",
                "v": "http://localhost/images/prune",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "30 02 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 280,
        "y": 560,
        "wires": [
            [
                "cc58358dd78c9a8a",
                "61949d7422f4c8a3"
            ]
        ]
    },
    {
        "id": "cc58358dd78c9a8a",
        "type": "exec",
        "z": "216db6efc0df9bc0",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock ",
        "addpay": "networks",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "networks",
        "x": 460,
        "y": 520,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "61949d7422f4c8a3",
        "type": "exec",
        "z": "216db6efc0df9bc0",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock ",
        "addpay": "images",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "images",
        "x": 460,
        "y": 600,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2c828dcea2260ee8",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "disable UI",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 860,
        "y": 540,
        "wires": [
            [
                "c7df8a3cd446ab39"
            ]
        ]
    },
    {
        "id": "1fe26c906804c48f",
        "type": "inject",
        "z": "216db6efc0df9bc0",
        "name": "enable UI",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 860,
        "y": 600,
        "wires": [
            [
                "c7df8a3cd446ab39"
            ]
        ]
    },
    {
        "id": "c7df8a3cd446ab39",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config.ui",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "2b9a4a79e583d72a",
        "type": "file in",
        "z": "216db6efc0df9bc0",
        "name": "package",
        "filename": "./package.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 480,
        "y": 120,
        "wires": [
            [
                "47acfb0f70efb0b1"
            ]
        ]
    },
    {
        "id": "47acfb0f70efb0b1",
        "type": "json",
        "z": "216db6efc0df9bc0",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 650,
        "y": 120,
        "wires": [
            [
                "8238525b0e482b59"
            ]
        ]
    },
    {
        "id": "8238525b0e482b59",
        "type": "change",
        "z": "216db6efc0df9bc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "package",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "91e25dba31c28805",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/engine/:type",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 220,
        "wires": [
            [
                "53aaf7026e5a7cee",
                "4acdf31cd717543f"
            ]
        ]
    },
    {
        "id": "4f41f373f7947d21",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "req.params.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "containers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "volumes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "networks",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "images",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "endpoint",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 570,
        "y": 280,
        "wires": [
            [
                "4de06d76878cdbd0"
            ],
            [
                "3c46077f2f10a641"
            ],
            [
                "2efc622d38ebd4aa"
            ],
            [
                "840619e239d214aa"
            ],
            [
                "840619e239d214aa",
                "2efc622d38ebd4aa",
                "3c46077f2f10a641",
                "4de06d76878cdbd0",
                "70c57a4688add144",
                "7a4d9d8b863a0612"
            ]
        ]
    },
    {
        "id": "e9f0354eab8d7e74",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/images/:id/:server/updateAll",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 1140,
        "wires": [
            [
                "76cc755e336a49b4"
            ]
        ]
    },
    {
        "id": "76cc755e336a49b4",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "req.params.id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "server",
                "pt": "msg",
                "to": "req.params.server",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "logEvent",
                "pt": "msg",
                "to": "Images:POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "638d7280d71ba478",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dockers[msg.server].images",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1140,
        "wires": [
            [
                "3c8afd4635a96a87"
            ]
        ]
    },
    {
        "id": "3c8afd4635a96a87",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1110,
        "y": 1140,
        "wires": [
            [
                "db0793e7274f3a8a"
            ]
        ]
    },
    {
        "id": "e2e981e6c514feb4",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "\"http://localhost:1880/api/engine/\" & msg.id & \"/\" & msg.server & \"/images/create?fromImage=\" & msg.payload.RepoTags[0]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{ \"x-auth-token\": msg.token }",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "db0793e7274f3a8a",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload.RepoTags[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": ":latest$",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 1200,
        "wires": [
            [
                "eabece74968eac3b"
            ],
            [
                "769b5173e23d983a"
            ]
        ]
    },
    {
        "id": "eabece74968eac3b",
        "type": "delay",
        "z": "a827fd671d6a227e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 350,
        "y": 1200,
        "wires": [
            [
                "e2e981e6c514feb4"
            ]
        ]
    },
    {
        "id": "769b5173e23d983a",
        "type": "join",
        "z": "a827fd671d6a227e",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 330,
        "y": 1260,
        "wires": [
            [
                "5559e10b283dedc4"
            ]
        ]
    },
    {
        "id": "5559e10b283dedc4",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 1260,
        "wires": []
    },
    {
        "id": "f200149509f2291b",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/containers/:id/:server/updateAll",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 1340,
        "wires": [
            [
                "6c9cb6aea92e4508"
            ]
        ]
    },
    {
        "id": "6c9cb6aea92e4508",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "req.params.id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "server",
                "pt": "msg",
                "to": "req.params.server",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "logEvent",
                "pt": "msg",
                "to": "Images:POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "bfab342db173a4f2",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "images",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dockers[msg.server].containers",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1400,
        "wires": [
            [
                "d8602976d5689ec4"
            ]
        ]
    },
    {
        "id": "d8602976d5689ec4",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 270,
        "y": 1460,
        "wires": [
            [
                "e105c9676e4cb793"
            ]
        ]
    },
    {
        "id": "0c36f881b20c72f8",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.Image",
                "pt": "msg",
                "to": "images[msg.payload.ImageID]",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.ImageID",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "\"http://localhost:1880/api/recreate/\" & msg.id & \"/\" & msg.server & msg.payload.Names[0]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{ \"x-auth-token\": msg.token }",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PUT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "a41fd3c95c962c78",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload.Image",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^sha256:",
                "vt": "str",
                "case": false
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 1460,
        "wires": [
            [
                "c9d63f4e9d4877d2"
            ],
            [
                "579359edf1b98950"
            ]
        ]
    },
    {
        "id": "c9d63f4e9d4877d2",
        "type": "delay",
        "z": "a827fd671d6a227e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 1460,
        "wires": [
            [
                "0c36f881b20c72f8"
            ]
        ]
    },
    {
        "id": "579359edf1b98950",
        "type": "join",
        "z": "a827fd671d6a227e",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 630,
        "y": 1520,
        "wires": [
            [
                "50858e1b88581847"
            ]
        ]
    },
    {
        "id": "50858e1b88581847",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 810,
        "y": 1520,
        "wires": []
    },
    {
        "id": "e105c9676e4cb793",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload.State",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "running",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 1460,
        "wires": [
            [
                "a41fd3c95c962c78"
            ],
            [
                "579359edf1b98950"
            ]
        ]
    },
    {
        "id": "300c141cd74207b0",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dockers[msg.server].images",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1340,
        "wires": [
            [
                "767e2b687b4f286d"
            ]
        ]
    },
    {
        "id": "767e2b687b4f286d",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1110,
        "y": 1340,
        "wires": [
            [
                "814c2ac7247343fc"
            ]
        ]
    },
    {
        "id": "814c2ac7247343fc",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    msg.payload.Id: $substringBefore(msg.payload.RepoDigests[0], \"@\") & \":latest\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 1400,
        "wires": [
            [
                "5da9867cbeeef990"
            ]
        ]
    },
    {
        "id": "5da9867cbeeef990",
        "type": "join",
        "z": "a827fd671d6a227e",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 370,
        "y": 1400,
        "wires": [
            [
                "bfab342db173a4f2"
            ]
        ]
    },
    {
        "id": "df268a4a9955ef48",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -s -X GET --unix-socket /var/run/docker.sock http://localhost/containers/json?all=1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "221cb4f11aa9b1dc"
            ],
            [],
            []
        ]
    },
    {
        "id": "3c46077f2f10a641",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock http://localhost/volumes",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "volumes",
        "x": 780,
        "y": 320,
        "wires": [
            [
                "1a50c26c9c0a0708"
            ],
            [],
            []
        ]
    },
    {
        "id": "2efc622d38ebd4aa",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock http://localhost/networks",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "networks",
        "x": 780,
        "y": 440,
        "wires": [
            [
                "13f3463f42580ff9"
            ],
            [],
            []
        ]
    },
    {
        "id": "840619e239d214aa",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock http://localhost/images/json",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "images",
        "x": 780,
        "y": 560,
        "wires": [
            [
                "bf87cac23b3411d9"
            ],
            [],
            []
        ]
    },
    {
        "id": "53aaf7026e5a7cee",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 160,
        "y": 280,
        "wires": []
    },
    {
        "id": "2cc40b296062191e",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/images/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"host\": msg.config.id,\t   \"name\": $split(msg.result[0].RepoDigests[0],\"@\")[0],\t   \"provider\": \"dockerhub\",\t   \"version\": $split(msg.result[0].RepoTags[0],\":\")[1] ? $split(msg.result[0].RepoTags[0],\":\")[1] : $substring(msg.result[0].Id,7,32),\t   \"size\": $round(msg.result[0].Size / 1024 / 1024),\t   \"ImageID\": msg.result[0].Id\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 560,
        "wires": [
            [
                "3cd883eb0ec5d869"
            ]
        ]
    },
    {
        "id": "1daea440d755f8c9",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1670,
        "y": 560,
        "wires": [
            [
                "05457d6efadc3737"
            ]
        ]
    },
    {
        "id": "521aa77a01fcea45",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "config",
        "rules": [
            {
                "t": "set",
                "p": "config.netbox_url",
                "pt": "global",
                "to": "req.query.url",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "config.id",
                "pt": "global",
                "to": "req.query.id",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "config.netbox_token",
                "pt": "global",
                "to": "req.query.token",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "config.endpoint",
                "pt": "global",
                "to": "req.query.endpoint",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "4f41f373f7947d21"
            ]
        ]
    },
    {
        "id": "6faf3827d41504fd",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1210,
        "y": 560,
        "wires": [
            [
                "2cc40b296062191e"
            ]
        ]
    },
    {
        "id": "3cd883eb0ec5d869",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1530,
        "y": 560,
        "wires": [
            [
                "1daea440d755f8c9"
            ]
        ]
    },
    {
        "id": "d1b84cfbb90de451",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/networks/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"host\": msg.config.id,\t   \"name\": msg.result.Name,\t   \"driver\": $string(msg.result.Driver) = \"null\" ? \"None\" : msg.result.Driver,\t   \"NetworkID\": msg.result.Id,\t   \"state\": \"created\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 480,
        "wires": [
            [
                "d262d362c08337f4"
            ]
        ]
    },
    {
        "id": "d262d362c08337f4",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1650,
        "y": 480,
        "wires": [
            [
                "eac6a267ba1d8eaf"
            ]
        ]
    },
    {
        "id": "13f3463f42580ff9",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 950,
        "y": 460,
        "wires": [
            [
                "6ebef0d1eb0f7066"
            ]
        ]
    },
    {
        "id": "ae206511b514eff9",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1270,
        "y": 480,
        "wires": [
            [
                "d1b84cfbb90de451"
            ]
        ]
    },
    {
        "id": "d0800a089eab13c2",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/volumes/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"host\": msg.config.id,\t   \"name\": msg.result.Name,\t   \"driver\": msg.result.Driver\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 400,
        "wires": [
            [
                "7d51fb2a4a8ebca5"
            ]
        ]
    },
    {
        "id": "7d51fb2a4a8ebca5",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1270,
        "y": 400,
        "wires": [
            [
                "2b11dfa028894e68"
            ]
        ]
    },
    {
        "id": "1a50c26c9c0a0708",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 320,
        "wires": [
            [
                "ff1efcf6edbac8aa"
            ]
        ]
    },
    {
        "id": "e26b6e9ed2eaee27",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1470,
        "y": 340,
        "wires": [
            [
                "d0800a089eab13c2"
            ]
        ]
    },
    {
        "id": "81887b8b8a629144",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Volumes",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1300,
        "y": 340,
        "wires": [
            [
                "e26b6e9ed2eaee27"
            ]
        ]
    },
    {
        "id": "eead888045896e1a",
        "type": "split",
        "z": "a827fd671d6a227e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1270,
        "y": 140,
        "wires": [
            [
                "03079290b974e3ec"
            ]
        ]
    },
    {
        "id": "4de06d76878cdbd0",
        "type": "delay",
        "z": "a827fd671d6a227e",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 120,
        "wires": [
            [
                "df268a4a9955ef48"
            ]
        ]
    },
    {
        "id": "f4ca91fa82b0cf42",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/containers/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"host\": msg.config.id,\t   \"name\": $replace(msg.result.Name,\"/\",\"\"),\t   \"status\": msg.result.State.Status = \"running\" ? \"running \" & $ceil(($toMillis($now()) - $toMillis(msg.result.State.StartedAt)) / 1000 / 60 / 60 / 24) & \"d\" : \"na\",\t   \"state\": msg.result.State.Status,\t   \"image\": {\t    \"host\": msg.input.data.host.id,\t    \"ImageID\": msg.result.Image\t    },\t   \"ContainerID\": msg.result.Id,\t   \"network_settings\": [$each(msg.result.NetworkSettings.Networks, function($v, $k) { { \"network\": { \"name\": $k } } })],\t   \"ports\": msg.result.NetworkSettings.Ports ? [$each(msg.result.NetworkSettings.Ports, function($v, $k) { { \"public_port\" : $v[0] = null ? 0 : $v[0].HostPort, \"private_port\": $split($k,\"/\")[0], \"type\": $split($k,\"/\")[1] } })] : [$each(msg.result.Config.ExposedPorts, function($v, $k) { $not($exists($lookup($v,'IP'))) or $lookup($v,'IP') = \"0.0.0.0\" ? { \"public_port\": $v.PublicPort ? $v.PublicPort : \"0\", \"private_port\": $split($k,\"/\")[0], \"type\": $split($k,\"/\")[1] } })],\t   \"env\": [$map(msg.result.Config.Env, function($v, $k) { { \"var_name\": $split($v,\"=\")[0], \"value\": $split($v,\"=\")[1] } })],\t   \"labels\": [$each(msg.result.Config.Labels, function($v, $k) { { \"key\": $k, \"value\": $v } })],\t   \"mounts\": [$map(msg.result.Mounts, function($v, $k) { $v.Type = \"volume\" ? { \"source\": $v.Destination, \"volume\": { \"name\": $v.Name, \"host\": msg.config.id } } })]\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 260,
        "wires": [
            [
                "a02aa01b4760459f"
            ]
        ]
    },
    {
        "id": "a02aa01b4760459f",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1330,
        "y": 260,
        "wires": [
            [
                "85576a332e06d405"
            ]
        ]
    },
    {
        "id": "417ae7536ebebf6e",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 1010,
        "y": 200,
        "wires": [
            [
                "42827c9888e44fd1"
            ],
            [],
            []
        ]
    },
    {
        "id": "03079290b974e3ec",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.result.Id) & \"/json -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 200,
        "wires": [
            [
                "417ae7536ebebf6e"
            ]
        ]
    },
    {
        "id": "42827c9888e44fd1",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1170,
        "y": 200,
        "wires": [
            [
                "a407f99fbc5717c1"
            ]
        ]
    },
    {
        "id": "7a4d9d8b863a0612",
        "type": "exec",
        "z": "a827fd671d6a227e",
        "command": "curl -X GET --unix-socket /var/run/docker.sock http://localhost/version",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "version",
        "x": 740,
        "y": 720,
        "wires": [
            [
                "cdf0ca856701cd23"
            ],
            [],
            []
        ]
    },
    {
        "id": "736fb3433484e657",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/containers",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 590,
        "y": 60,
        "wires": [
            [
                "df268a4a9955ef48"
            ]
        ]
    },
    {
        "id": "a23553e203eafd05",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1650,
        "y": 200,
        "wires": []
    },
    {
        "id": "a407f99fbc5717c1",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/api/containers",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 200,
        "wires": [
            [
                "deec1424f8eaa469"
            ],
            [
                "f4ca91fa82b0cf42"
            ]
        ]
    },
    {
        "id": "deec1424f8eaa469",
        "type": "join",
        "z": "a827fd671d6a227e",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1510,
        "y": 200,
        "wires": [
            [
                "a23553e203eafd05"
            ]
        ]
    },
    {
        "id": "fd0a547f9fcd6516",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/info",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 420,
        "y": 720,
        "wires": [
            [
                "ed796f5589c864f7"
            ]
        ]
    },
    {
        "id": "7581057e6d016ca9",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1330,
        "y": 720,
        "wires": []
    },
    {
        "id": "ed796f5589c864f7",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "output",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "package",
                "pt": "msg",
                "to": "package",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "output",
                "pt": "msg",
                "to": "{\t    \"message\":\"netbox-saashup-agent\",\t    \"configured\": msg.config.netbox_token and msg.config.netbox_token != \"\" ? \"ok\" : \"nok\",\t    \"version\": msg.package.version\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 720,
        "wires": [
            [
                "7a4d9d8b863a0612"
            ]
        ]
    },
    {
        "id": "4acdf31cd717543f",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "req.params.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "endpoint",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 260,
        "wires": [
            [
                "521aa77a01fcea45"
            ],
            [
                "4f41f373f7947d21"
            ]
        ]
    },
    {
        "id": "7cd37714a247d0f3",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 620,
        "wires": [
            [
                "0f90d4602b562160"
            ]
        ]
    },
    {
        "id": "70c57a4688add144",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/hosts/' & msg.config.id & \"/\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"id\": msg.config.id,\t   \"endpoint\": msg.config.endpoint,\t   \"state\": \"running\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 620,
        "wires": [
            [
                "7cd37714a247d0f3"
            ]
        ]
    },
    {
        "id": "e843e090678a61b9",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "403",
        "headers": {},
        "x": 1120,
        "y": 60,
        "wires": []
    },
    {
        "id": "221cb4f11aa9b1dc",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 100,
        "wires": [
            [
                "e843e090678a61b9"
            ],
            [
                "4b4af488cdc44caf"
            ]
        ]
    },
    {
        "id": "4b4af488cdc44caf",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1110,
        "y": 120,
        "wires": [
            [
                "eead888045896e1a"
            ]
        ]
    },
    {
        "id": "f40640d266bf843b",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "c36cfb76e8ade619"
            ]
        ]
    },
    {
        "id": "33c0c19a8ba03cae",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 550,
        "y": 500,
        "wires": []
    },
    {
        "id": "1649d9a702989caf",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/images",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 780,
        "y": 500,
        "wires": [
            [
                "840619e239d214aa"
            ]
        ]
    },
    {
        "id": "0900cd90c6af5e59",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/api/images",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 560,
        "wires": [
            [
                "39acafa9d2f2d6ba"
            ],
            [
                "6faf3827d41504fd"
            ]
        ]
    },
    {
        "id": "39acafa9d2f2d6ba",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 520,
        "wires": []
    },
    {
        "id": "bf87cac23b3411d9",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 560,
        "wires": [
            [
                "0900cd90c6af5e59"
            ]
        ]
    },
    {
        "id": "b281d91de2634af5",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/networks",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 790,
        "y": 380,
        "wires": [
            [
                "2efc622d38ebd4aa"
            ]
        ]
    },
    {
        "id": "6ebef0d1eb0f7066",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/api/networks",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 460,
        "wires": [
            [
                "d79aa8c42bc038ae"
            ],
            [
                "ae206511b514eff9"
            ]
        ]
    },
    {
        "id": "d79aa8c42bc038ae",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 440,
        "wires": []
    },
    {
        "id": "e4c31d1d3fae99f0",
        "type": "http in",
        "z": "a827fd671d6a227e",
        "name": "",
        "url": "/api/volumes",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 800,
        "y": 260,
        "wires": [
            [
                "3c46077f2f10a641"
            ]
        ]
    },
    {
        "id": "ff1efcf6edbac8aa",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/api/volumes",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 320,
        "wires": [
            [
                "8c85e65c2bfecef8"
            ],
            [
                "81887b8b8a629144"
            ]
        ]
    },
    {
        "id": "8c85e65c2bfecef8",
        "type": "http response",
        "z": "a827fd671d6a227e",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1190,
        "y": 300,
        "wires": []
    },
    {
        "id": "cdf0ca856701cd23",
        "type": "json",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 890,
        "y": 720,
        "wires": [
            [
                "f415bfcc211c0729"
            ]
        ]
    },
    {
        "id": "9c13c13d42f82b69",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "output",
        "rules": [
            {
                "t": "set",
                "p": "output.docker",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "output",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 720,
        "wires": [
            [
                "7581057e6d016ca9"
            ]
        ]
    },
    {
        "id": "f415bfcc211c0729",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "/api/engine/endpoint",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/info",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 720,
        "wires": [
            [
                "5a07511ed7c011d2"
            ],
            [
                "9c13c13d42f82b69"
            ]
        ]
    },
    {
        "id": "2f201f0cc6cf431f",
        "type": "file in",
        "z": "a827fd671d6a227e",
        "name": "/",
        "filename": "/usr/src/node-red/index.html",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 390,
        "y": 460,
        "wires": [
            [
                "33c0c19a8ba03cae"
            ]
        ]
    },
    {
        "id": "85576a332e06d405",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1465,
        "y": 260,
        "wires": []
    },
    {
        "id": "2b11dfa028894e68",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1415,
        "y": 400,
        "wires": []
    },
    {
        "id": "eac6a267ba1d8eaf",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1785,
        "y": 480,
        "wires": []
    },
    {
        "id": "0f90d4602b562160",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1165,
        "y": 620,
        "wires": []
    },
    {
        "id": "05457d6efadc3737",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1795,
        "y": 560,
        "wires": []
    },
    {
        "id": "c36cfb76e8ade619",
        "type": "switch",
        "z": "a827fd671d6a227e",
        "name": "",
        "property": "config.ui",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 500,
        "wires": [
            [
                "2f201f0cc6cf431f"
            ],
            [
                "33c0c19a8ba03cae"
            ]
        ]
    },
    {
        "id": "5a07511ed7c011d2",
        "type": "change",
        "z": "a827fd671d6a227e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "package",
                "pt": "msg",
                "to": "package",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/hosts/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t   \"id\": $number(msg.config.id),\t   \"docker_api_version\": msg.result.ApiVersion,\t   \"agent_version\": msg.package.version,\t   \"state\": \"running\"\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 680,
        "wires": [
            [
                "debd21ad874ab51b"
            ]
        ]
    },
    {
        "id": "debd21ad874ab51b",
        "type": "http request",
        "z": "a827fd671d6a227e",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1390,
        "y": 680,
        "wires": [
            [
                "466a424beeab3020"
            ]
        ]
    },
    {
        "id": "466a424beeab3020",
        "type": "link out",
        "z": "a827fd671d6a227e",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1515,
        "y": 680,
        "wires": []
    },
    {
        "id": "e974d3bd502f614f",
        "type": "http in",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "url": "/api/engine/:type",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 200,
        "wires": [
            [
                "5db8c0db8473ea8e",
                "ea738534a1b15332"
            ]
        ]
    },
    {
        "id": "5db8c0db8473ea8e",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "req.params.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "containers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "volumes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "networks",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "images",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "endpoint",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "163b02482bbd751b"
            ],
            [
                "060ac7e41c2e9d20"
            ],
            [
                "1be042b22cf71230"
            ],
            [
                "dfd9416e4f31ef88"
            ],
            []
        ]
    },
    {
        "id": "12cecd82c1d9f476",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 1110,
        "y": 80,
        "wires": [
            [
                "7b6bbc39f8d6a88e"
            ],
            [],
            []
        ]
    },
    {
        "id": "0e4b8086449ddd56",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "networks",
        "x": 960,
        "y": 380,
        "wires": [
            [
                "fe7f9567d081d8a7"
            ],
            [],
            []
        ]
    },
    {
        "id": "b49c4832fc35827a",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "images",
        "x": 960,
        "y": 480,
        "wires": [
            [
                "3a845c367b89a50e"
            ],
            [],
            []
        ]
    },
    {
        "id": "ea738534a1b15332",
        "type": "http response",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 200,
        "y": 260,
        "wires": []
    },
    {
        "id": "7d0f6463ecfeeb50",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/images/create?fromImage=' & msg.input.data.name  & '&tag=' & msg.input.data.version & '\\\"'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 480,
        "wires": [
            [
                "b49c4832fc35827a"
            ]
        ]
    },
    {
        "id": "dfd9416e4f31ef88",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload.data.size",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 480,
        "wires": [
            [
                "7d0f6463ecfeeb50"
            ]
        ]
    },
    {
        "id": "2eb2de8f9ca00a2b",
        "type": "json",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1150,
        "y": 540,
        "wires": [
            [
                "d375e2981f9fa4fb"
            ]
        ]
    },
    {
        "id": "cc3c1cea0eb84ca0",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -X GET --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "images",
        "x": 960,
        "y": 560,
        "wires": [
            [
                "2eb2de8f9ca00a2b"
            ],
            [],
            []
        ]
    },
    {
        "id": "3a845c367b89a50e",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/images/' & msg.input.data.name  & ':' & msg.input.data.version & '/json\\\"'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 480,
        "wires": [
            [
                "cc3c1cea0eb84ca0"
            ]
        ]
    },
    {
        "id": "d375e2981f9fa4fb",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/images/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t   \"id\": msg.input.data.id,\t   \"size\": $round(msg.payload.Size / 1024 / 1024),\t   \"ImageID\":  msg.payload.Id\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 640,
        "wires": [
            [
                "231e0a10bb5c0cac"
            ]
        ]
    },
    {
        "id": "231e0a10bb5c0cac",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 930,
        "y": 640,
        "wires": [
            [
                "829323373ce00e9e"
            ]
        ]
    },
    {
        "id": "98985cb45ca68974",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/networks/create\\\" -H \\\"content-type: application/json\\\" -d { \\\"Name\\\":\\\"' & msg.input.data.name  & '\\\",\\\"Driver\\\":\\\"' & msg.input.data.driver & '\\\" }'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"Name\": msg.input.data.name,\t   \"Driver\": msg.input.data.driver\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/networks/create -H 'content-type: application/json' -d '\" & $string(msg.payload) & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 380,
        "wires": [
            [
                "0e4b8086449ddd56"
            ]
        ]
    },
    {
        "id": "060ac7e41c2e9d20",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"Name\": msg.input.data.name,\t   \"Driver\": msg.input.data.driver\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/volumes/create -H 'content-type: application/json' -d '\" & $string(msg.payload) & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 300,
        "wires": [
            [
                "40036eabb47532d6"
            ]
        ]
    },
    {
        "id": "ecc3d13695524e12",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"Image\": msg.input.data.image.name & \":\" & msg.input.data.image.version \t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/create?name=\" & $string(msg.input.data.name) & \" -H 'content-type: application/json' -d '\" & $string(msg.payload) & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 80,
        "wires": [
            [
                "12cecd82c1d9f476"
            ]
        ]
    },
    {
        "id": "163b02482bbd751b",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload.data",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "name",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 80,
        "wires": [
            [
                "ab2c66ff78afc05b"
            ]
        ]
    },
    {
        "id": "836f86ac79995686",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/containers/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t    \"id\": msg.input.data.id,\t   \"host\": msg.input.data.host.id,\t   \"name\": $replace(msg.result.Name,\"/\",\"\"),\t   \"state\": msg.result.State.State,\t   \"status\": msg.result.State.Status = \"running\" ? \"running \" & $ceil(($toMillis($now()) - $toMillis(msg.result.State.StartedAt)) / 1000 / 60 / 60 / 24) & \"d\" : \"na\",\t   \"image\": {\t    \"host\": msg.input.data.host.id,\t    \"ImageID\": msg.result.Image\t    },\t   \"ContainerID\": msg.result.Id,\t   \"network_settings\": [$each(msg.result.NetworkSettings.Networks, function($v, $k) { { \"network\": { \"name\": $k } } })],\t   \"ports\": msg.result.NetworkSettings.Ports ? [$each(msg.result.NetworkSettings.Ports, function($v, $k) { { \"public_port\" : $v[0] = null ? 0 : $v[0].HostPort, \"private_port\": $split($k,\"/\")[0], \"type\": $split($k,\"/\")[1] } })] : [$each(msg.result.Config.ExposedPorts, function($v, $k) { $not($exists($lookup($v,'IP'))) or $lookup($v,'IP') = \"0.0.0.0\" ? { \"public_port\": $v.PublicPort ? $v.PublicPort : \"0\", \"private_port\": $split($k,\"/\")[0], \"type\": $split($k,\"/\")[1] } })],\t   \"env\": $map(msg.result.Config.Env, function($v, $k) { { \"var_name\": $split($v,\"=\")[0], \"value\": $split($v,\"=\")[1] } }),\t   \"labels\": [$each(msg.result.Config.Labels, function($v, $k) { { \"key\": $k, \"value\": $v } })],\t   \"mounts\": [$map(msg.result.Mounts, function($v, $k) { $v.Type = \"volume\" ? { \"source\": $v.Source, \"volume\": { \"name\": $v.Name, \"host\": msg.config.id } } })]\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 220,
        "wires": [
            [
                "a363e235a4fda0b0"
            ]
        ]
    },
    {
        "id": "a363e235a4fda0b0",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "14ee8c9739857e6c"
            ]
        ]
    },
    {
        "id": "7b6bbc39f8d6a88e",
        "type": "json",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1290,
        "y": 80,
        "wires": [
            [
                "8689e16407e06796"
            ]
        ]
    },
    {
        "id": "23ca2c7db549468c",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -X GET --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 870,
        "y": 160,
        "wires": [
            [
                "2f564349b35d306d"
            ],
            [],
            []
        ]
    },
    {
        "id": "8689e16407e06796",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.result.Id) & \"/json -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 160,
        "wires": [
            [
                "23ca2c7db549468c"
            ]
        ]
    },
    {
        "id": "2f564349b35d306d",
        "type": "json",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 650,
        "y": 220,
        "wires": [
            [
                "836f86ac79995686"
            ]
        ]
    },
    {
        "id": "fe7f9567d081d8a7",
        "type": "json",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1130,
        "y": 360,
        "wires": [
            [
                "3032a954e533689f"
            ]
        ]
    },
    {
        "id": "3032a954e533689f",
        "type": "change",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/networks/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t   \"id\": msg.input.data.id,\t   \"NetworkID\":  msg.payload.Id,\t   \"state\": \"created\"\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 420,
        "wires": [
            [
                "01899c0865cdbdd7"
            ]
        ]
    },
    {
        "id": "01899c0865cdbdd7",
        "type": "http request",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1330,
        "y": 420,
        "wires": [
            [
                "310b29964dbaaca6"
            ]
        ]
    },
    {
        "id": "ab2c66ff78afc05b",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "msg.payload.data.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "created",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 80,
        "wires": [
            [
                "ecc3d13695524e12"
            ]
        ]
    },
    {
        "id": "40036eabb47532d6",
        "type": "exec",
        "z": "3ea1a4b04d852f38",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "volumes",
        "x": 880,
        "y": 300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "1be042b22cf71230",
        "type": "switch",
        "z": "3ea1a4b04d852f38",
        "name": "",
        "property": "payload.data.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "creating",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 380,
        "wires": [
            [
                "98985cb45ca68974"
            ]
        ]
    },
    {
        "id": "14ee8c9739857e6c",
        "type": "link out",
        "z": "3ea1a4b04d852f38",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1205,
        "y": 220,
        "wires": []
    },
    {
        "id": "310b29964dbaaca6",
        "type": "link out",
        "z": "3ea1a4b04d852f38",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1445,
        "y": 420,
        "wires": []
    },
    {
        "id": "829323373ce00e9e",
        "type": "link out",
        "z": "3ea1a4b04d852f38",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1055,
        "y": 640,
        "wires": []
    },
    {
        "id": "dcf35b57666a30f9",
        "type": "http in",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "url": "/api/engine/containers",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "5fb5be1ef90b0e1b",
                "07c699b4b1965ea3"
            ]
        ]
    },
    {
        "id": "e19033703f460489",
        "type": "switch",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "input.data.operation",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "restart",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "recreate",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 510,
        "y": 140,
        "wires": [
            [
                "abf33f3924f79790"
            ],
            [
                "962de83b529657a1"
            ],
            [
                "2a9bfcb142dfe007"
            ],
            [
                "789b51cd58a06f88"
            ]
        ]
    },
    {
        "id": "abf33f3924f79790",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.name) & \"/restart -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 100,
        "wires": [
            [
                "a1b35447c74d2e5a"
            ]
        ]
    },
    {
        "id": "a1b35447c74d2e5a",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 890,
        "y": 140,
        "wires": [
            [
                "b61b7a952b88459b"
            ],
            [],
            []
        ]
    },
    {
        "id": "5fb5be1ef90b0e1b",
        "type": "http response",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 220,
        "y": 200,
        "wires": []
    },
    {
        "id": "962de83b529657a1",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.name) & \"/stop -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 140,
        "wires": [
            [
                "a1b35447c74d2e5a"
            ]
        ]
    },
    {
        "id": "2a9bfcb142dfe007",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.name) & \"/start -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 180,
        "wires": [
            [
                "a1b35447c74d2e5a"
            ]
        ]
    },
    {
        "id": "07c699b4b1965ea3",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "input",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 140,
        "wires": [
            [
                "e19033703f460489"
            ]
        ]
    },
    {
        "id": "dee6879c09c11a9e",
        "type": "delay",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 820,
        "y": 320,
        "wires": [
            [
                "785742096b0cfd9d"
            ]
        ]
    },
    {
        "id": "c0427424cda32752",
        "type": "delay",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 400,
        "wires": [
            [
                "e785a313f36a684d",
                "640fd6625e14a5ab"
            ]
        ]
    },
    {
        "id": "789b51cd58a06f88",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.name) & \"/stop -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 260,
        "wires": [
            [
                "c1b8315cfebedf9c"
            ]
        ]
    },
    {
        "id": "c1b8315cfebedf9c",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 830,
        "y": 260,
        "wires": [
            [
                "98651876cfa546d5"
            ],
            [],
            []
        ]
    },
    {
        "id": "98651876cfa546d5",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "millis",
                "pt": "msg",
                "to": "$millis()",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.name) & \"/rename?name=\" & msg.input.data.name & \"-\" & msg.millis & \" -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 260,
        "wires": [
            [
                "789ecf873c6742a1"
            ]
        ]
    },
    {
        "id": "789ecf873c6742a1",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 1190,
        "y": 260,
        "wires": [
            [
                "6624c4443f54445e"
            ],
            [],
            []
        ]
    },
    {
        "id": "6624c4443f54445e",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"Image\": msg.input.data.image.name & \":\" & msg.input.data.image.version,\t   \"Env\": [\t       $map(\t           msg.input.data.env,\t           function($k,$v){$k.var_name &\"=\" & $k.value}\t       )\t   ],\t   \"Labels\": $merge(\t       $map(\t           msg.input.data.labels,\t           function($k,$v) {{ $k.key: $k.value }}\t       )\t   ),\t   \"ExposedPorts\": $merge(\t       $map(\t           msg.input.data.ports,\t           function($k,$v){\t               {\t                   $k.private_port & \"/\" & $k.type: $k.public_port ? [{  \"HostPort\" : $k.public_port }] : {} \t               } \t           }\t       )\t   ),\t   \"Mounts\": [\t       $map(\t           msg.input.data.mounts,\t           function($k,$v){\t               {\t                   \"Target\": $k.source,\t                   \"Name\": $k.volume.name,\t                   \"Type\": \"volume\",\t                   \"Destination\": $k.source,\t                   \"RW\": true,\t                   \"Mode\": \"z\",\t                   \"Source\": $k.volume.name,\t                   \"Driver\": $k.volume.driver\t               }\t           }\t       )\t   ],\t   \"NetworkingConfig\": {\t       \"EndpointsConfig\": $merge($map(msg.input.data.network_settings, function($k,$v) { $v = 0 ? { $k.network.name : { \"NetworkID\": $k.network.NetworkID } } }))\t   }\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/create?name=\" & $string(msg.input.data.name) & \" -H 'content-type: application/json' -d '\" & $replace($string(msg.payload),\"'\",\"\") & \"'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 320,
        "wires": [
            [
                "3442c7ad3a999fb0"
            ]
        ]
    },
    {
        "id": "3442c7ad3a999fb0",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -s -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 610,
        "y": 320,
        "wires": [
            [
                "dee6879c09c11a9e"
            ],
            [],
            []
        ]
    },
    {
        "id": "785742096b0cfd9d",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.name) & \"/start -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 320,
        "wires": [
            [
                "e89d15e93a51d48e"
            ]
        ]
    },
    {
        "id": "e89d15e93a51d48e",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -X POST --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 1230,
        "y": 320,
        "wires": [
            [
                "c0427424cda32752"
            ],
            [],
            []
        ]
    },
    {
        "id": "e785a313f36a684d",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/containers/' & msg.input.data.name & \"-\" & msg.millis  & '\\\"'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 400,
        "wires": [
            [
                "f23087336998dbdc"
            ]
        ]
    },
    {
        "id": "f23087336998dbdc",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -X DELETE --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 770,
        "y": 400,
        "wires": [
            [
                "db2200593ae3a709"
            ],
            [],
            []
        ]
    },
    {
        "id": "6eb853fc4be1bae7",
        "type": "split",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 460,
        "wires": [
            [
                "931e6c9d6c7e2d5b"
            ]
        ]
    },
    {
        "id": "640fd6625e14a5ab",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "input.data.network_settings",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 460,
        "wires": [
            [
                "6eb853fc4be1bae7"
            ]
        ]
    },
    {
        "id": "632a00a8c87297bd",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -X POST --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "connect network",
        "x": 1080,
        "y": 460,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "931e6c9d6c7e2d5b",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/networks/' & msg.payload.network.name & '/connect\\\"'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"Container\": \"test\" }",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 460,
        "wires": [
            [
                "632a00a8c87297bd"
            ]
        ]
    },
    {
        "id": "608ba0f355161cc5",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "\"http://localhost/containers/\" & $string(msg.input.data.name) & \"/json -H 'content-type: application/json'\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 540,
        "wires": [
            [
                "3b574a7133f293da"
            ]
        ]
    },
    {
        "id": "3b574a7133f293da",
        "type": "exec",
        "z": "8e85e8c54d776ddc",
        "command": "curl -X GET --unix-socket /var/run/docker.sock",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 470,
        "y": 540,
        "wires": [
            [
                "414b3bae361e79d7"
            ],
            [],
            []
        ]
    },
    {
        "id": "a12cfbe9ec7b317a",
        "type": "link in",
        "z": "8e85e8c54d776ddc",
        "name": "fetch container",
        "links": [
            "87af9743f25dca82",
            "ec4a365091d27e97"
        ],
        "x": 135,
        "y": 540,
        "wires": [
            [
                "608ba0f355161cc5"
            ]
        ]
    },
    {
        "id": "87af9743f25dca82",
        "type": "link out",
        "z": "8e85e8c54d776ddc",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "a12cfbe9ec7b317a"
        ],
        "x": 1085,
        "y": 400,
        "wires": []
    },
    {
        "id": "414b3bae361e79d7",
        "type": "json",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 630,
        "y": 540,
        "wires": [
            [
                "f7449a4ba2ed4548"
            ]
        ]
    },
    {
        "id": "f7449a4ba2ed4548",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "PATCH",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/plugins/docker/containers/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\t    \"id\": msg.input.data.id,\t   \"host\": msg.input.data.host.id,\t   \"name\": $replace(msg.result.Name,\"/\",\"\"),\t   \"operation\": \"none\",\t   \"state\": msg.result.State.Status,\t   \"status\": msg.result.State.Status = \"running\" ? \"running \" & $ceil(($toMillis($now()) - $toMillis(msg.result.State.StartedAt)) / 1000 / 60 / 60 / 24) & \"d\" : \"na\",\t   \"image\": {\t    \"host\": msg.input.data.host.id,\t    \"ImageID\": msg.result.Image\t    },\t   \"ContainerID\": msg.result.Id,\t   \"network_settings\": [$each(msg.result.NetworkSettings.Networks, function($v, $k) { { \"network\": { \"name\": $k } } })],\t   \"ports\": msg.result.NetworkSettings.Ports ? [$each(msg.result.NetworkSettings.Ports, function($v, $k) { { \"public_port\" : $v[0] = null ? 0 : $v[0].HostPort, \"private_port\": $split($k,\"/\")[0], \"type\": $split($k,\"/\")[1] } })] : [$each(msg.result.Config.ExposedPorts, function($v, $k) { $not($exists($lookup($v,'IP'))) or $lookup($v,'IP') = \"0.0.0.0\" ? { \"public_port\": $v.PublicPort ? $v.PublicPort : \"0\", \"private_port\": $split($k,\"/\")[0], \"type\": $split($k,\"/\")[1] } })],\t   \"env\": [$map(msg.result.Config.Env, function($v, $k) { { \"var_name\": $split($v,\"=\")[0], \"value\": $split($v,\"=\")[1] } })],\t   \"labels\": [$each(msg.result.Config.Labels, function($v, $k) { { \"key\": $k, \"value\": $v } })],\t   \"mounts\": [$map(msg.result.Mounts, function($v, $k) { $v.Type = \"volume\" ? { \"source\": $v.Source, \"volume\": { \"name\": $v.Name, \"host\": msg.config.id } } })]\t}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 540,
        "wires": [
            [
                "c469b4b880927dc6",
                "1e31acfa8553b622"
            ]
        ]
    },
    {
        "id": "c469b4b880927dc6",
        "type": "http request",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1030,
        "y": 540,
        "wires": [
            [
                "d10c0e59950649aa"
            ]
        ]
    },
    {
        "id": "ec4a365091d27e97",
        "type": "link out",
        "z": "8e85e8c54d776ddc",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "a12cfbe9ec7b317a"
        ],
        "x": 1305,
        "y": 80,
        "wires": []
    },
    {
        "id": "29132a5a3f72e359",
        "type": "delay",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1200,
        "y": 80,
        "wires": [
            [
                "ec4a365091d27e97"
            ]
        ]
    },
    {
        "id": "db2200593ae3a709",
        "type": "delay",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 960,
        "y": 400,
        "wires": [
            [
                "87af9743f25dca82"
            ]
        ]
    },
    {
        "id": "d10c0e59950649aa",
        "type": "link out",
        "z": "8e85e8c54d776ddc",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "36f439d2ba0ac71a"
        ],
        "x": 1155,
        "y": 540,
        "wires": []
    },
    {
        "id": "b61b7a952b88459b",
        "type": "switch",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 120,
        "wires": [
            [
                "29132a5a3f72e359"
            ],
            [
                "44b70c4a1a5241f9"
            ]
        ]
    },
    {
        "id": "44b70c4a1a5241f9",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/extras/journal-entries/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.container\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"warning\",\t   \"comments\": $string(msg.result)\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 180,
        "wires": [
            [
                "fc1e63a44287e26a"
            ]
        ]
    },
    {
        "id": "fc1e63a44287e26a",
        "type": "http request",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1290,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "1e31acfa8553b622",
        "type": "change",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/extras/journal-entries/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.container\",\t   \"assigned_object_id\": msg.input.data.id,\t   \"kind\": \"success\",\t   \"comments\": \"operation \" & input.data.operation & \" ok \"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 600,
        "wires": [
            [
                "9315edc0877baef6"
            ]
        ]
    },
    {
        "id": "9315edc0877baef6",
        "type": "http request",
        "z": "8e85e8c54d776ddc",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 990,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "5401a8e6f806f2a4",
        "type": "http in",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "url": "/api/engine/:type",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "e4e551b6bc5dea37",
                "de75d640c88c7f3d"
            ]
        ]
    },
    {
        "id": "e4e551b6bc5dea37",
        "type": "switch",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "property": "req.params.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "containers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "volumes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "networks",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "images",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "endpoint",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 430,
        "y": 200,
        "wires": [
            [
                "26be5d556ed73b83"
            ],
            [
                "b355cef7173754d0"
            ],
            [
                "60d5d72a994b7968"
            ],
            [
                "149d08725d1012b8"
            ],
            [
                "a00dd0a79554aef3"
            ]
        ]
    },
    {
        "id": "de75d640c88c7f3d",
        "type": "http response",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 200,
        "y": 260,
        "wires": []
    },
    {
        "id": "5dcfa45fe6f717c1",
        "type": "exec",
        "z": "5d9b33c2005cbce7",
        "command": "curl -X DELETE --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "images",
        "x": 1040,
        "y": 300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "6c90b5bd2a6c5166",
        "type": "change",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/images/' & msg.payload.data.name  & ':' & msg.payload.data.version & '\\\"'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 300,
        "wires": [
            [
                "5dcfa45fe6f717c1"
            ]
        ]
    },
    {
        "id": "fcf477d8445749af",
        "type": "exec",
        "z": "5d9b33c2005cbce7",
        "command": "curl -X DELETE --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "networks",
        "x": 1040,
        "y": 220,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5bf51c208da96dcf",
        "type": "change",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/networks/' & msg.payload.data.name  & '\\\"'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 220,
        "wires": [
            [
                "fcf477d8445749af"
            ]
        ]
    },
    {
        "id": "7ab52978cc3f435c",
        "type": "exec",
        "z": "5d9b33c2005cbce7",
        "command": "curl -X DELETE --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "volumes",
        "x": 1040,
        "y": 140,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2c62d4f9425726c8",
        "type": "change",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/networks/' & msg.payload.data.name  & '\\\"'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 140,
        "wires": [
            [
                "7ab52978cc3f435c"
            ]
        ]
    },
    {
        "id": "75209dbf0bb3c98a",
        "type": "exec",
        "z": "5d9b33c2005cbce7",
        "command": "curl -X DELETE --unix-socket /var/run/docker.sock ",
        "addpay": "post",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "containers",
        "x": 1050,
        "y": 60,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "93252cf054d8a9fa",
        "type": "change",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "post",
                "pt": "msg",
                "to": "'\\\"http://localhost/containers/' & msg.payload.data.name  & '\\\"'",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 60,
        "wires": [
            [
                "75209dbf0bb3c98a"
            ]
        ]
    },
    {
        "id": "a00dd0a79554aef3",
        "type": "change",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"netbox_url\":\"\",\"netbox_token\":\"\",\"ui\":1}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "config",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "26be5d556ed73b83",
        "type": "switch",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "property": "msg.payload.data.host.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "deleted",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 60,
        "wires": [
            [
                "93252cf054d8a9fa"
            ]
        ]
    },
    {
        "id": "b355cef7173754d0",
        "type": "switch",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "property": "msg.payload.data.host.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "deleted",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 160,
        "wires": [
            [
                "2c62d4f9425726c8"
            ]
        ]
    },
    {
        "id": "60d5d72a994b7968",
        "type": "switch",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "property": "msg.payload.data.host.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "deleted",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 220,
        "wires": [
            [
                "5bf51c208da96dcf"
            ]
        ]
    },
    {
        "id": "149d08725d1012b8",
        "type": "switch",
        "z": "5d9b33c2005cbce7",
        "name": "",
        "property": "msg.payload.data.host.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "deleted",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 670,
        "y": 280,
        "wires": [
            [
                "6c90b5bd2a6c5166"
            ]
        ]
    },
    {
        "id": "788067a8780c7835",
        "type": "http in",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "url": "/metrics",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "73888c186762494e"
            ]
        ]
    },
    {
        "id": "3fd4e88a742e84c2",
        "type": "exec",
        "z": "3ee57a9d7dc5fae7",
        "command": "curl -s -X GET --unix-socket /var/run/docker.sock http://localhost/containers/json?all=1",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Fetch all containers",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "c6a678adf2e69013"
            ],
            [],
            []
        ]
    },
    {
        "id": "c6a678adf2e69013",
        "type": "switch",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 80,
        "wires": [
            [
                "8534c7afec8166eb"
            ],
            [
                "0d955034e00fa0f5"
            ]
        ]
    },
    {
        "id": "0d955034e00fa0f5",
        "type": "json",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 910,
        "y": 120,
        "wires": [
            [
                "a15a7b2000f3b6c9"
            ]
        ]
    },
    {
        "id": "990b1773880e3b7d",
        "type": "template",
        "z": "3ee57a9d7dc5fae7",
        "name": "Parse Containers Output and Transform to Prometheus",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "# HELP netbox_docker_agent_container_running Show if a container is running\n# TYPE netbox_docker_agent_container_running gauge\n{{#container.running}}\nnetbox_docker_agent_container_running{name=\"{{{Names.0}}}\", state=\"{{{ State }}}\", status=\"{{{ Status }}}\"} 1\n{{/container.running}}\n\n# HELP netbox_docker_agent_container_exited Show if a container is exited\n# TYPE netbox_docker_agent_container_exited gauge\n{{#container.exited}}\nnetbox_docker_agent_container_exited{name=\"{{{Names.0}}}\", state=\"{{{ State }}}\", status=\"{{{ Status }}}\"} 1\n{{/container.exited}}\n\n# HELP netbox_docker_agent_container_stopped Show if a container is exited\n# TYPE netbox_docker_agent_container_stopped gauge\n{{#container.stopped}}\nnetbox_docker_agent_container_stopped{name=\"{{{Names.0}}}\", state=\"{{{ State }}}\", status=\"{{{ Status }}}\"} 1\n{{/container.stopped}}\n\n# HELP netbox_docker_agent_docker_daemon Show if the connection to the daemon is working\n# TYPE netbox_docker_agent_docker_daemon gauge\nnetbox_docker_agent_docker_daemon{socket=\"/var/run/docker.socket\"} {{container.docker_daemon}}\n\n# HELP netbox_docker_agent_netbox_error_response Show the netbox error response counter\n# TYPE netbox_docker_agent_netbox_error_response counter\nnetbox_docker_agent_netbox_error_response{} {{global.errorCounter}}",
        "output": "str",
        "x": 700,
        "y": 220,
        "wires": [
            [
                "cdecbe9f078ed45b"
            ]
        ]
    },
    {
        "id": "a15a7b2000f3b6c9",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "container",
                "pt": "msg",
                "to": "{\t    \"running\": msg.payload[State= \"running\"],\t    \"exited\": msg.payload[State= \"exited\"],\t    \"stopped\": msg.payload[State= \"stopped\"],\t    \"docker_daemon\": 1\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 120,
        "wires": [
            [
                "990b1773880e3b7d"
            ]
        ]
    },
    {
        "id": "cdecbe9f078ed45b",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "name=\"/",
                "fromt": "str",
                "to": "name=\"",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "metricPayload",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2f954b0ac225c1ed",
        "type": "inject",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "3fd4e88a742e84c2"
            ]
        ]
    },
    {
        "id": "cb3f2dc534bf1c31",
        "type": "http response",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "73888c186762494e",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "metricPayload",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 380,
        "wires": [
            [
                "cb3f2dc534bf1c31"
            ]
        ]
    },
    {
        "id": "8534c7afec8166eb",
        "type": "json",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 910,
        "y": 60,
        "wires": [
            [
                "c4bdf0a642d02be3"
            ]
        ]
    },
    {
        "id": "c4bdf0a642d02be3",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "container",
                "pt": "msg",
                "to": "{\t    \"running\": msg.payload[State= \"running\"],\t    \"exited\": msg.payload[State= \"exited\"],\t    \"stopped\": msg.payload[State= \"stopped\"],\t    \"docker_daemon\": 0\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "efb628585a41dde5",
        "type": "inject",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "fd27e954b669b5dc"
            ]
        ]
    },
    {
        "id": "fd27e954b669b5dc",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "errorCounter",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "df2cb95dca98e944",
        "type": "switch",
        "z": "3ee57a9d7dc5fae7",
        "name": "status code >= 400",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "400",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 500,
        "wires": [
            [
                "efc97803a70d7841",
                "d138d4d1284cc210"
            ]
        ]
    },
    {
        "id": "32266cc01be545d1",
        "type": "debug",
        "z": "3ee57a9d7dc5fae7",
        "name": "Log console",
        "active": true,
        "tosidebar": false,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 500,
        "wires": []
    },
    {
        "id": "efc97803a70d7841",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "inc counter",
        "rules": [
            {
                "t": "set",
                "p": "errorCounter",
                "pt": "global",
                "to": "$globalContext('errorCounter') + 1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 500,
        "wires": [
            [
                "32266cc01be545d1"
            ]
        ]
    },
    {
        "id": "36f439d2ba0ac71a",
        "type": "link in",
        "z": "3ee57a9d7dc5fae7",
        "name": "log cb",
        "links": [
            "05457d6efadc3737",
            "0f90d4602b562160",
            "14ee8c9739857e6c",
            "2b11dfa028894e68",
            "310b29964dbaaca6",
            "466a424beeab3020",
            "829323373ce00e9e",
            "85576a332e06d405",
            "d10c0e59950649aa",
            "eac6a267ba1d8eaf"
        ],
        "x": 105,
        "y": 500,
        "wires": [
            [
                "df2cb95dca98e944"
            ]
        ]
    },
    {
        "id": "d138d4d1284cc210",
        "type": "change",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "config",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "package",
                "pt": "msg",
                "to": "package",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "msg.config.netbox_url & '/api/extras/journal-entries/'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{\t    \"Authorization\": \"Token \" & msg.config.netbox_token,\t    \"Accept\": \"application/json\"\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "POST",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"assigned_object_type\": \"netbox_docker_plugin.host\",\t   \"assigned_object_id\": msg.config.id,\t   \"kind\": \"danger\",\t   \"comments\": $string(msg.result)\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 560,
        "wires": [
            [
                "198ae5a8fa13d26b"
            ]
        ]
    },
    {
        "id": "198ae5a8fa13d26b",
        "type": "http request",
        "z": "3ee57a9d7dc5fae7",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 690,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b0cac6c15fd048ef",
        "type": "link in",
        "z": "3ee57a9d7dc5fae7",
        "name": "log docker",
        "links": [
            "9fc01bf414b956de"
        ],
        "x": 315,
        "y": 560,
        "wires": [
            [
                "d138d4d1284cc210"
            ]
        ]
    }
]
